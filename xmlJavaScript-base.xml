<?xml version="1.0"?>
<!-- Copyright MPSOFTWARE --><javascript>
  <modules>
    <module name="JavaScript" disabled="False">
      <interfaces>
        <interface name="Array" extends="Function">
          <attributes>
            <attribute readonly="True" type="Number" name="length" />
          </attributes>
          <functions>
            <function returns="Object" name="pop" />
            <function returns="Object" name="push">
              <params>
                <param optional="False" type="Object" name="element1" />
                <param optional="True" type="Object" name="elementN" />
              </params>
            </function>
            <function returns="void" name="reverse" />
            <function returns="Object" name="shift" />
            <function returns="void" name="sort">
              <params>
                <param optional="False" type="Function" name="compareFunction" />
              </params>
            </function>
            <function returns="Array" name="splice">
              <params>
                <param optional="False" type="Number" name="index" />
                <param optional="False" type="howMany" name="Number" />
                <param optional="True" type="Object" name="element1" />
                <param optional="True" type="Object" name="elementN" />
              </params>
            </function>
            <function returns="Number" name="unshift">
              <params>
                <param optional="False" type="Object" name="element1" />
                <param optional="True" type="Object" name="elementN" />
              </params>
            </function>
            <function returns="Array" name="concat">
              <params>
                <param optional="False" type="Object" name="value1" />
                <param optional="True" type="Object" name="valueN" />
              </params>
            </function>
            <function returns="String" name="join">
              <params>
                <param optional="False" type="String" name="separator" />
              </params>
            </function>
            <function returns="Array" name="slice">
              <params>
                <param optional="False" type="Number" name="begin" />
                <param optional="True" type="Number" name="end" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="Boolean" extends="Function" />
        <interface name="Date" extends="Function">
          <functions>
            <function returns="Number" name="parse">
              <params>
                <param optional="False" type="String" name="dateString" />
              </params>
            </function>
            <function returns="Number" name="UTC">
              <params>
                <param optional="False" type="Number" name="year" />
                <param optional="False" type="Number" name="month" />
                <param optional="True" type="Number" name="date" />
                <param optional="True" type="Number" name="hrs" />
                <param optional="True" type="Number" name="min" />
                <param optional="True" type="Number" name="sec" />
                <param optional="True" type="Number" name="ms" />
              </params>
            </function>
            <function returns="Number" name="getDate" />
            <function returns="Number" name="getDay" />
            <function returns="Number" name="getFullYear" />
            <function returns="Number" name="getHours" />
            <function returns="Number" name="getMilliseconds" />
            <function returns="Number" name="getMinutes" />
            <function returns="Number" name="getMonth" />
            <function returns="Number" name="getSeconds" />
            <function returns="Number" name="getTime" />
            <function returns="Number" name="getTimezoneOffset" />
            <function returns="Number" name="getUTCDate" />
            <function returns="Number" name="getUTCDay" />
            <function returns="Number" name="getUTCFullYear" />
            <function returns="Number" name="getUTCHours" />
            <function returns="Number" name="getUTCMilliseconds" />
            <function returns="Number" name="getUTCMinutes" />
            <function returns="Number" name="getUTCMonth" />
            <function returns="Number" name="getUTCSeconds" />
            <function returns="void" name="setDate">
              <params>
                <param optional="False" type="Number" name="dayValue" />
              </params>
            </function>
            <function returns="void" name="setFullYear">
              <params>
                <param optional="False" type="Number" name="yearValue" />
                <param optional="True" type="Number" name="monthValue" />
                <param optional="True" type="Number" name="dayValue" />
              </params>
            </function>
            <function returns="void" name="setHours">
              <params>
                <param optional="False" type="Number" name="hoursValue" />
                <param optional="True" type="Number" name="minutesValue" />
                <param optional="True" type="Number" name="secondsValue" />
                <param optional="True" type="Number" name="msValue" />
              </params>
            </function>
            <function returns="void" name="setMilliseconds">
              <params>
                <param optional="False" type="Number" name="millisecondsValue" />
              </params>
            </function>
            <function returns="void" name="setMinutes">
              <params>
                <param optional="False" type="Number" name="minutesValue" />
                <param optional="True" type="Number" name="secondsValue" />
                <param optional="True" type="Number" name="msValue" />
              </params>
            </function>
            <function returns="void" name="setMonth">
              <params>
                <param optional="False" type="Number" name="monthValue" />
                <param optional="True" type="Number" name="dayValue" />
              </params>
            </function>
            <function returns="void" name="setSeconds">
              <params>
                <param optional="False" type="Number" name="secondsValue" />
                <param optional="True" type="Number" name="msValue" />
              </params>
            </function>
            <function returns="void" name="setTime">
              <params>
                <param optional="False" type="Number" name="timeValue" />
              </params>
            </function>
            <function returns="void" name="setUTCDate">
              <params>
                <param optional="False" type="Number" name="dayValue" />
              </params>
            </function>
            <function returns="void" name="setUTCFullYear">
              <params>
                <param optional="False" type="Number" name="yearValue" />
                <param optional="True" type="Number" name="monthValue" />
                <param optional="True" type="Number" name="dayValue" />
              </params>
            </function>
            <function returns="void" name="setUTCHours">
              <params>
                <param optional="False" type="Number" name="hoursValue" />
                <param optional="True" type="Number" name="minutesValue" />
                <param optional="True" type="Number" name="secondsValue" />
                <param optional="True" type="Number" name="msValue" />
              </params>
            </function>
            <function returns="void" name="setUTCMilliseconds">
              <params>
                <param optional="False" type="Number" name="millisecondsValue" />
              </params>
            </function>
            <function returns="void" name="setUTCMinutes">
              <params>
                <param optional="False" type="Number" name="minutesValue" />
                <param optional="True" type="Number" name="secondsValue" />
                <param optional="True" type="Number" name="msValue" />
              </params>
            </function>
            <function returns="void" name="setUTCMonth">
              <params>
                <param optional="False" type="Number" name="monthValue" />
                <param optional="True" type="Number" name="dayValue" />
              </params>
            </function>
            <function returns="void" name="setUTCSeconds">
              <params>
                <param optional="False" type="Number" name="secondsValue" />
                <param optional="True" type="Number" name="msValue" />
              </params>
            </function>
            <function returns="void" name="setUTCTime">
              <params>
                <param optional="False" type="Number" name="timeValue" />
              </params>
            </function>
            <function returns="String" name="toDateString" />
            <function returns="String" name="toLocaleDateString" />
            <function returns="String" name="toLocaleString" />
            <function returns="String" name="toLocaleTimeString" />
            <function returns="String" name="toTimeString" />
            <function returns="String" name="toUTCString" />
          </functions>
        </interface>
        <interface name="Error" extends="Function">
          <attributes>
            <attribute readonly="True" type="String" name="message" />
            <attribute readonly="True" type="String" name="name" />
          </attributes>
        </interface>
        <interface name="EvalError" extends="Error" />
        <interface name="Function" extends="Object">
          <attributes>
            <attribute readonly="True" type="Number" name="length" />
          </attributes>
          <functions>
            <function returns="Object" name="apply">
              <params>
                <param optional="False" type="Object" name="thisArg" />
                <param optional="True" type="Array" name="argsArray" />
              </params>
            </function>
            <function returns="Object" name="call">
              <params>
                <param optional="False" type="Object" name="thisArg" />
                <param optional="True" type="Object" name="arg1" />
                <param optional="True" type="Object" name="argN" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="Math" extends="Function">
          <attributes>
            <attribute readonly="True" type="Number" name="E" />
            <attribute readonly="True" type="Number" name="LN2" />
            <attribute readonly="True" type="Number" name="LN10" />
            <attribute readonly="True" type="Number" name="LOG2E" />
            <attribute readonly="True" type="Number" name="LOG10E" />
            <attribute readonly="True" type="Number" name="PI" />
            <attribute readonly="True" type="Number" name="SQRT1_2" />
            <attribute readonly="True" type="Number" name="SQRT2" />
          </attributes>
          <functions>
            <function returns="Number" name="abs">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
            <function returns="Number" name="acos">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
            <function returns="Number" name="asin">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
            <function returns="Number" name="atan">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
            <function returns="Number" name="atan2">
              <params>
                <param optional="False" type="Number" name="x" />
                <param optional="False" type="Number" name="y" />
              </params>
            </function>
            <function returns="Number" name="ceil">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
            <function returns="Number" name="cos">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
            <function returns="Number" name="exp">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
            <function returns="Number" name="floor">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
            <function returns="Number" name="log">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
            <function returns="Number" name="max">
              <params>
                <param optional="True" type="Number" name="value1" />
                <param optional="True" type="Number" name="valueN" />
              </params>
            </function>
            <function returns="Number" name="min">
              <params>
                <param optional="True" type="Number" name="value1" />
                <param optional="True" type="Number" name="valueN" />
              </params>
            </function>
            <function returns="Number" name="pow">
              <params>
                <param optional="False" type="Number" name="base" />
                <param optional="False" type="Number" name="exponents" />
              </params>
            </function>
            <function returns="Number" name="random" />
            <function returns="Number" name="round">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
            <function returns="Number" name="sin">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
            <function returns="Number" name="sqrt">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
            <function returns="Number" name="tan">
              <params>
                <param optional="False" type="Number" name="x" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="Number" extends="Function">
          <attributes>
            <attribute readonly="True" type="Number" name="MAX_VALUE" />
            <attribute readonly="True" type="Number" name="MIN_VALUE" />
            <attribute readonly="True" type="Number" name="NaN" />
            <attribute readonly="True" type="Number" name="NEGATIVE_INFINITY" />
            <attribute readonly="True" type="Number" name="POSITIVE_INFINITY" />
          </attributes>
          <functions>
            <function returns="String" name="toExponential">
              <params>
                <param optional="True" type="Number" name="fractionDigits" />
              </params>
            </function>
            <function returns="String" name="toFixed">
              <params>
                <param optional="True" type="Number" name="digits" />
              </params>
            </function>
            <function returns="String" name="toPrecision">
              <params>
                <param optional="True" type="Number" name="precision" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="Object" extends="">
          <attributes>
            <attribute readonly="False" type="Function" name="constructor" />
            <attribute readonly="False" type="Object" name="prototype" />
          </attributes>
          <functions>
            <function returns="Boolean" name="hasOwnProperty">
              <params>
                <param optional="False" type="String" name="prop" />
              </params>
            </function>
            <function returns="Boolean" name="isPrototypeOf">
              <params>
                <param optional="False" type="Object" name="object" />
              </params>
            </function>
            <function returns="Boolean" name="propertyIsEnumerable">
              <params>
                <param optional="False" type="Object" name="prop" />
              </params>
            </function>
            <function returns="String" name="toLocaleString" />
            <function returns="String" name="toString" />
            <function returns="Object" name="valueOf" />
          </functions>
        </interface>
        <interface name="RangeError" extends="Error" />
        <interface name="ReferenceError" extends="Error" />
        <interface name="RegExp" extends="Function">
          <attributes>
            <attribute readonly="True" type="Boolean" name="global" />
            <attribute readonly="True" type="Boolean" name="ignoreCase" />
            <attribute readonly="False" type="Number" name="lastIndex" />
            <attribute readonly="True" type="Boolean" name="multiline" />
            <attribute readonly="True" type="String" name="source" />
          </attributes>
          <functions>
            <function returns="Array" name="exec">
              <params>
                <param optional="False" type="String" name="str" />
              </params>
            </function>
            <function returns="Boolean" name="Test">
              <params>
                <param optional="False" type="String" name="str" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="String" extends="Function">
          <functions>
            <function returns="String" name="fromCharCode">
              <params>
                <param optional="False" type="Number" name="num1" />
                <param optional="True" type="Number" name="numN" />
              </params>
            </function>
            <function returns="String" name="charAt">
              <params>
                <param optional="False" type="Number" name="index" />
              </params>
            </function>
            <function returns="Number" name="charCodeAt">
              <params>
                <param optional="False" type="Number" name="index" />
              </params>
            </function>
            <function returns="String" name="concat">
              <params>
                <param optional="False" type="String" name="string2" />
                <param optional="False" type="String" name="string3" />
                <param optional="True" type="String" name="stringN" />
              </params>
            </function>
            <function returns="Number" name="indexOf">
              <params>
                <param optional="False" type="String" name="searchValue" />
                <param optional="True" type="Number" name="fromIndex" />
              </params>
            </function>
            <function returns="Number" name="lastIndexOf">
              <params>
                <param optional="False" type="Number" name="index" />
              </params>
            </function>
            <function returns="Number" name="localeCompare">
              <params>
                <param optional="False" type="String" name="param" />
              </params>
            </function>
            <function returns="Array" name="match">
              <params>
                <param optional="False" type="RegExp" name="regexp" />
              </params>
            </function>
            <function returns="String" name="replace">
              <params>
                <param optional="False" type="RegExp" name="regexpOrSubstr" />
                <param optional="False" type="String" name="newSubStrOrFunction" />
              </params>
            </function>
            <function returns="Number" name="search">
              <params>
                <param optional="False" type="RegExp" name="regexp" />
              </params>
            </function>
            <function returns="String" name="slice">
              <params>
                <param optional="False" type="Number" name="beginslice" />
                <param optional="True" type="Number" name="endSlice" />
              </params>
            </function>
            <function returns="Array" name="split">
              <params>
                <param optional="True" type="RegExp" name="separator" />
                <param optional="True" type="Number" name="limit" />
              </params>
            </function>
            <function returns="String" name="substr">
              <params>
                <param optional="False" type="Number" name="start" />
                <param optional="True" type="Number" name="length" />
              </params>
            </function>
            <function returns="String" name="substring">
              <params>
                <param optional="False" type="Number" name="indexA" />
                <param optional="True" type="Number" name="indexB" />
              </params>
            </function>
            <function returns="String" name="toLocaleLowerCase" />
            <function returns="String" name="toLocaleUpperCase" />
            <function returns="String" name="toLowerCase" />
            <function returns="String" name="toUpperCase" />
          </functions>
        </interface>
        <interface name="SyntaxError" extends="Error" />
        <interface name="TypeError" extends="Error" />
        <interface name="URIError" extends="Error" />
      </interfaces>
    </module>
    <module name="DOM1" disabled="True">
      <interfaces>
        <interface name="Attr" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="boolean" name="specified" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
        </interface>
        <interface name="Attribute" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="boolean" name="specified" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
        </interface>
        <interface name="CDATASection" extends="Text" />
        <interface name="CharacterData" extends="Node">
          <attributes>
            <attribute readonly="False" type="DOMString" name="data" />
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="DOMString" name="substringData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="appendData">
              <params>
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="insertData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="replaceData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="Comment" extends="CharacterData" />
        <interface name="Document" extends="Node">
          <attributes>
            <attribute readonly="True" type="DocumentType" name="doctype" />
            <attribute readonly="True" type="DOMImplementation" name="implementation" />
            <attribute readonly="True" type="Element" name="documentElement" />
          </attributes>
          <functions>
            <function returns="Element" name="createElement">
              <params>
                <param optional="False" type="DOMString" name="tagName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DocumentFragment" name="createDocumentFragment" />
            <function returns="Text" name="createTextNode">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
            </function>
            <function returns="Comment" name="createComment">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
            </function>
            <function returns="CDATASection" name="createCDATASection">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="ProcessingInstruction" name="createProcessingInstruction">
              <params>
                <param optional="False" type="DOMString" name="target" />
                <param optional="False" type="DOMString" name="data" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="createAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="EntityReference" name="createEntityReference">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="NodeList" name="getElementsByTagName">
              <params>
                <param optional="False" type="DOMString" name="tagname" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="DocumentFragment" extends="Node" />
        <interface name="DocumentType" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="NamedNodeMap" name="entities" />
            <attribute readonly="True" type="NamedNodeMap" name="notations" />
          </attributes>
        </interface>
        <interface name="DOMException" extends="">
          <functions>
            <function returns="unsigned short" name="code" />
          </functions>
          <consts>
            <const type="unsigned short" name="INDEX_SIZE_ERR" value="1" />
            <const type="unsigned short" name="DOMSTRING_SIZE_ERR" value="2" />
            <const type="unsigned short" name="HIERARCHY_REQUEST_ERR" value="3" />
            <const type="unsigned short" name="WRONG_DOCUMENT_ERR" value="4" />
            <const type="unsigned short" name="INVALID_CHARACTER_ERR" value="5" />
            <const type="unsigned short" name="NO_DATA_ALLOWED_ERR" value="6" />
            <const type="unsigned short" name="NO_MODIFICATION_ALLOWED_ERR" value="7" />
            <const type="unsigned short" name="NOT_FOUND_ERR" value="8" />
            <const type="unsigned short" name="NOT_SUPPORTED_ERR" value="9" />
            <const type="unsigned short" name="INUSE_ATTRIBUTE_ERR" value="10" />
          </consts>
        </interface>
        <interface name="DOMImplementation" extends="">
          <functions>
            <function returns="boolean" name="hasFeature">
              <params>
                <param optional="False" type="DOMString" name="feature" />
                <param optional="False" type="DOMString" name="version" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="Element" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="tagName" />
          </attributes>
          <functions>
            <function returns="DOMString" name="getAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="void" name="setAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="DOMString" name="value" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="removeAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="getAttributeNode">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="Attr" name="setAttributeNode">
              <params>
                <param optional="False" type="Attr" name="newAttr" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="NodeList" name="getElementsByTagName">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="void" name="normalize" />
          </functions>
        </interface>
        <interface name="Entity" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="publicId" />
            <attribute readonly="True" type="DOMString" name="systemId" />
            <attribute readonly="True" type="DOMString" name="notationName" />
          </attributes>
        </interface>
        <interface name="EntityReference" extends="Node" />
        <interface name="HTMLAnchorElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="charset" />
            <attribute readonly="False" type="DOMString" name="coords" />
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="DOMString" name="hreflang" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="rel" />
            <attribute readonly="False" type="DOMString" name="rev" />
            <attribute readonly="False" type="DOMString" name="shape" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="False" type="DOMString" name="target" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
          <functions>
            <function returns="void" name="blur" />
            <function returns="void" name="focus" />
          </functions>
        </interface>
        <interface name="HTMLAppletElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="alt" />
            <attribute readonly="False" type="DOMString" name="archive" />
            <attribute readonly="False" type="DOMString" name="code" />
            <attribute readonly="False" type="DOMString" name="codeBase" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="DOMString" name="hspace" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="object" />
            <attribute readonly="False" type="DOMString" name="vspace" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLAreaElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="alt" />
            <attribute readonly="False" type="DOMString" name="coords" />
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="boolean" name="noHref" />
            <attribute readonly="False" type="DOMString" name="shape" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="False" type="DOMString" name="target" />
          </attributes>
        </interface>
        <interface name="HTMLBaseElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="DOMString" name="target" />
          </attributes>
        </interface>
        <interface name="HTMLBaseFontElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="color" />
            <attribute readonly="False" type="DOMString" name="face" />
            <attribute readonly="False" type="DOMString" name="size" />
          </attributes>
        </interface>
        <interface name="HTMLBlockquoteElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="cite" />
          </attributes>
        </interface>
        <interface name="HTMLBodyElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="aLink" />
            <attribute readonly="False" type="DOMString" name="background" />
            <attribute readonly="False" type="DOMString" name="bgColor" />
            <attribute readonly="False" type="DOMString" name="link" />
            <attribute readonly="False" type="DOMString" name="text" />
            <attribute readonly="False" type="DOMString" name="vLink" />
          </attributes>
        </interface>
        <interface name="HTMLBRElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="clear" />
          </attributes>
        </interface>
        <interface name="HTMLButtonElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
        </interface>
        <interface name="HTMLCollection" extends="">
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="Node" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="Node" name="namedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="HTMLDirectoryElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
          </attributes>
        </interface>
        <interface name="HTMLDivElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLDListElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
          </attributes>
        </interface>
        <interface name="HTMLDocument" extends="Document">
          <attributes>
            <attribute readonly="False" type="DOMString" name="title" />
            <attribute readonly="True" type="DOMString" name="referrer" />
            <attribute readonly="True" type="DOMString" name="domain" />
            <attribute readonly="True" type="DOMString" name="URL" />
            <attribute readonly="False" type="HTMLElement" name="body" />
            <attribute readonly="True" type="HTMLCollection" name="images" />
            <attribute readonly="True" type="HTMLCollection" name="applets" />
            <attribute readonly="True" type="HTMLCollection" name="links" />
            <attribute readonly="True" type="HTMLCollection" name="forms" />
            <attribute readonly="True" type="HTMLCollection" name="anchors" />
            <attribute readonly="False" type="DOMString" name="cookie" />
          </attributes>
          <functions>
            <function returns="void" name="open" />
            <function returns="void" name="close" />
            <function returns="void" name="write">
              <params>
                <param optional="False" type="DOMString" name="text" />
              </params>
            </function>
            <function returns="void" name="writeln">
              <params>
                <param optional="False" type="DOMString" name="text" />
              </params>
            </function>
            <function returns="Element" name="getElementById">
              <params>
                <param optional="False" type="DOMString" name="elementId" />
              </params>
            </function>
            <function returns="NodeList" name="getElementsByName">
              <params>
                <param optional="False" type="DOMString" name="elementName" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="HTMLElement" extends="Element">
          <attributes>
            <attribute readonly="False" type="DOMString" name="id" />
            <attribute readonly="False" type="DOMString" name="title" />
            <attribute readonly="False" type="DOMString" name="lang" />
            <attribute readonly="False" type="DOMString" name="dir" />
            <attribute readonly="False" type="DOMString" name="className" />
          </attributes>
        </interface>
        <interface name="HTMLFieldSetElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
          </attributes>
        </interface>
        <interface name="HTMLFontElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="color" />
            <attribute readonly="False" type="DOMString" name="face" />
            <attribute readonly="False" type="DOMString" name="size" />
          </attributes>
        </interface>
        <interface name="HTMLFormElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLCollection" name="elements" />
            <attribute readonly="True" type="long" name="length" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="acceptCharset" />
            <attribute readonly="False" type="DOMString" name="action" />
            <attribute readonly="False" type="DOMString" name="enctype" />
            <attribute readonly="False" type="DOMString" name="method" />
            <attribute readonly="False" type="DOMString" name="target" />
          </attributes>
          <functions>
            <function returns="void" name="submit" />
            <function returns="void" name="reset" />
          </functions>
        </interface>
        <interface name="HTMLFrameElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="frameBorder" />
            <attribute readonly="False" type="DOMString" name="longDesc" />
            <attribute readonly="False" type="DOMString" name="marginHeight" />
            <attribute readonly="False" type="DOMString" name="marginWidth" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="boolean" name="noResize" />
            <attribute readonly="False" type="DOMString" name="scrolling" />
            <attribute readonly="False" type="DOMString" name="src" />
          </attributes>
        </interface>
        <interface name="HTMLFrameSetElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="cols" />
            <attribute readonly="False" type="DOMString" name="rows" />
          </attributes>
        </interface>
        <interface name="HTMLHeadElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="profile" />
          </attributes>
        </interface>
        <interface name="HTMLHeadingElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLHRElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="boolean" name="noShade" />
            <attribute readonly="False" type="DOMString" name="size" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLHtmlElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="version" />
          </attributes>
        </interface>
        <interface name="HTMLIFrameElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="frameBorder" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="DOMString" name="longDesc" />
            <attribute readonly="False" type="DOMString" name="marginHeight" />
            <attribute readonly="False" type="DOMString" name="marginWidth" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="scrolling" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLImageElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="lowSrc" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="alt" />
            <attribute readonly="False" type="DOMString" name="border" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="DOMString" name="hspace" />
            <attribute readonly="False" type="boolean" name="isMap" />
            <attribute readonly="False" type="DOMString" name="longDesc" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="False" type="DOMString" name="useMap" />
            <attribute readonly="False" type="DOMString" name="vspace" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLInputElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="defaultValue" />
            <attribute readonly="False" type="boolean" name="defaultChecked" />
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accept" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="alt" />
            <attribute readonly="False" type="boolean" name="checked" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="long" name="maxLength" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="boolean" name="readOnly" />
            <attribute readonly="False" type="DOMString" name="size" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="useMap" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
          <functions>
            <function returns="void" name="blur" />
            <function returns="void" name="focus" />
            <function returns="void" name="select" />
            <function returns="void" name="click" />
          </functions>
        </interface>
        <interface name="HTMLIsIndexElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="prompt" />
          </attributes>
        </interface>
        <interface name="HTMLLabelElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="htmlFor" />
          </attributes>
        </interface>
        <interface name="HTMLLegendElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLLIElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="type" />
            <attribute readonly="False" type="long" name="value" />
          </attributes>
        </interface>
        <interface name="HTMLLinkElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="charset" />
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="DOMString" name="hreflang" />
            <attribute readonly="False" type="DOMString" name="media" />
            <attribute readonly="False" type="DOMString" name="rel" />
            <attribute readonly="False" type="DOMString" name="rev" />
            <attribute readonly="False" type="DOMString" name="target" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLMapElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLCollection" name="areas" />
            <attribute readonly="False" type="DOMString" name="name" />
          </attributes>
        </interface>
        <interface name="HTMLMenuElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
          </attributes>
        </interface>
        <interface name="HTMLMetaElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="content" />
            <attribute readonly="False" type="DOMString" name="httpEquiv" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="scheme" />
          </attributes>
        </interface>
        <interface name="HTMLModElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="cite" />
            <attribute readonly="False" type="DOMString" name="dateTime" />
          </attributes>
        </interface>
        <interface name="HTMLObjectElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="code" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="archive" />
            <attribute readonly="False" type="DOMString" name="border" />
            <attribute readonly="False" type="DOMString" name="codeBase" />
            <attribute readonly="False" type="DOMString" name="codeType" />
            <attribute readonly="False" type="DOMString" name="data" />
            <attribute readonly="False" type="boolean" name="declare" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="DOMString" name="hspace" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="standby" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="False" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="useMap" />
            <attribute readonly="False" type="DOMString" name="vspace" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLOListElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
            <attribute readonly="False" type="long" name="start" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLOptGroupElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="label" />
          </attributes>
        </interface>
        <interface name="HTMLOptionElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="boolean" name="defaultSelected" />
            <attribute readonly="True" type="DOMString" name="text" />
            <attribute readonly="False" type="long" name="index" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="label" />
            <attribute readonly="True" type="boolean" name="selected" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
        </interface>
        <interface name="HTMLParagraphElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLParamElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="value" />
            <attribute readonly="False" type="DOMString" name="valueType" />
          </attributes>
        </interface>
        <interface name="HTMLPreElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="long" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLQuoteElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="cite" />
          </attributes>
        </interface>
        <interface name="HTMLScriptElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="text" />
            <attribute readonly="False" type="DOMString" name="htmlFor" />
            <attribute readonly="False" type="DOMString" name="event" />
            <attribute readonly="False" type="DOMString" name="charset" />
            <attribute readonly="False" type="boolean" name="defer" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLSelectElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="False" type="long" name="selectedIndex" />
            <attribute readonly="False" type="DOMString" name="value" />
            <attribute readonly="True" type="long" name="length" />
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="True" type="HTMLCollection" name="options" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="boolean" name="multiple" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="long" name="size" />
            <attribute readonly="False" type="long" name="tabIndex" />
          </attributes>
          <functions>
            <function returns="void" name="add">
              <params>
                <param optional="False" type="HTMLElement" name="element" />
                <param optional="False" type="HTMLElement" name="before" />
              </params>
            </function>
            <function returns="void" name="remove">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
            </function>
            <function returns="void" name="blur" />
            <function returns="void" name="focus" />
          </functions>
        </interface>
        <interface name="HTMLStyleElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="media" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLTableCaptionElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLTableCellElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="long" name="cellIndex" />
            <attribute readonly="False" type="DOMString" name="abbr" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="axis" />
            <attribute readonly="False" type="DOMString" name="bgColor" />
            <attribute readonly="False" type="DOMString" name="ch" />
            <attribute readonly="False" type="DOMString" name="chOff" />
            <attribute readonly="False" type="long" name="colSpan" />
            <attribute readonly="False" type="DOMString" name="headers" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="boolean" name="noWrap" />
            <attribute readonly="False" type="long" name="rowSpan" />
            <attribute readonly="False" type="DOMString" name="scope" />
            <attribute readonly="False" type="DOMString" name="vAlign" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLTableColElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="ch" />
            <attribute readonly="False" type="DOMString" name="chOff" />
            <attribute readonly="False" type="long" name="span" />
            <attribute readonly="False" type="DOMString" name="vAlign" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLTableElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="HTMLTableCaptionElement" name="caption" />
            <attribute readonly="False" type="HTMLTableSectionElement" name="tHead" />
            <attribute readonly="False" type="HTMLTableSectionElement" name="tFoot" />
            <attribute readonly="True" type="HTMLCollection" name="rows" />
            <attribute readonly="True" type="HTMLCollection" name="tBodies" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="bgColor" />
            <attribute readonly="False" type="DOMString" name="border" />
            <attribute readonly="False" type="DOMString" name="cellPadding" />
            <attribute readonly="False" type="DOMString" name="cellSpacing" />
            <attribute readonly="False" type="DOMString" name="frame" />
            <attribute readonly="False" type="DOMString" name="rules" />
            <attribute readonly="False" type="DOMString" name="summary" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
          <functions>
            <function returns="HTMLElement" name="createTHead" />
            <function returns="void" name="deleteTHead" />
            <function returns="HTMLElement" name="createTFoot" />
            <function returns="void" name="deleteTFoot" />
            <function returns="HTMLElement" name="createCaption" />
            <function returns="void" name="deleteCaption" />
            <function returns="HTMLElement" name="insertRow">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
            </function>
            <function returns="void" name="deleteRow">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="HTMLTableRowElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="long" name="rowIndex" />
            <attribute readonly="False" type="long" name="sectionRowIndex" />
            <attribute readonly="False" type="HTMLCollection" name="cells" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="bgColor" />
            <attribute readonly="False" type="DOMString" name="ch" />
            <attribute readonly="False" type="DOMString" name="chOff" />
            <attribute readonly="False" type="DOMString" name="vAlign" />
          </attributes>
          <functions>
            <function returns="HTMLElement" name="insertCell">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
            </function>
            <function returns="void" name="deleteCell">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="HTMLTableSectionElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="ch" />
            <attribute readonly="False" type="DOMString" name="chOff" />
            <attribute readonly="False" type="DOMString" name="vAlign" />
            <attribute readonly="True" type="HTMLCollection" name="rows" />
          </attributes>
          <functions>
            <function returns="HTMLElement" name="insertRow">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
            </function>
            <function returns="void" name="deleteRow">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="HTMLTextAreaElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="defaultValue" />
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="long" name="cols" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="boolean" name="readOnly" />
            <attribute readonly="False" type="long" name="rows" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
          <functions>
            <function returns="void" name="blur" />
            <function returns="void" name="focus" />
            <function returns="void" name="select" />
          </functions>
        </interface>
        <interface name="HTMLTitleElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="text" />
          </attributes>
        </interface>
        <interface name="HTMLUListElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="NamedNodeMap" extends="">
          <functions>
            <function returns="Node" name="getNamedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="Node" name="setNamedItem">
              <params>
                <param optional="False" type="Node" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="removeNamedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
        </interface>
        <interface name="Node" extends="">
          <consts>
            <const type="unsigned short" name="ELEMENT_NODE" value="1" />
            <const type="unsigned short" name="ATTRIBUTE_NODE" value="2" />
            <const type="unsigned short" name="TEXT_NODE" value="3" />
            <const type="unsigned short" name="CDATA_SECTION_NODE" value="4" />
            <const type="unsigned short" name="ENTITY_REFERENCE_NODE" value="5" />
            <const type="unsigned short" name="ENTITY_NODE" value="6" />
            <const type="unsigned short" name="PROCESSING_INSTRUCTION_NODE" value="7" />
            <const type="unsigned short" name="COMMENT_NODE" value="8" />
            <const type="unsigned short" name="DOCUMENT_NODE" value="9" />
            <const type="unsigned short" name="DOCUMENT_TYPE_NODE" value="10" />
            <const type="unsigned short" name="DOCUMENT_FRAGMENT_NODE" value="11" />
            <const type="unsigned short" name="NOTATION_NODE" value="12" />
          </consts>
          <attributes>
            <attribute readonly="True" type="DOMString" name="nodeName" />
            <attribute readonly="False" type="DOMString" name="nodeValue" />
            <attribute readonly="True" type="unsigned short" name="nodeType" />
            <attribute readonly="True" type="Node" name="parentNode" />
            <attribute readonly="True" type="NodeList" name="childNodes" />
            <attribute readonly="True" type="Node" name="firstChild" />
            <attribute readonly="True" type="Node" name="lastChild" />
            <attribute readonly="True" type="Node" name="previousSibling" />
            <attribute readonly="True" type="Node" name="nextSibling" />
            <attribute readonly="True" type="NamedNodeMap" name="attributes" />
            <attribute readonly="True" type="Document" name="ownerDocument" />
          </attributes>
          <functions>
            <function returns="Node" name="insertBefore">
              <params>
                <param optional="False" type="Node" name="newChild" />
                <param optional="False" type="Node" name="refChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="replaceChild">
              <params>
                <param optional="False" type="Node" name="newChild" />
                <param optional="False" type="Node" name="oldChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="removeChild">
              <params>
                <param optional="False" type="Node" name="oldChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="appendChild">
              <params>
                <param optional="False" type="Node" name="newChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="boolean" name="hasChildNodes" />
            <function returns="Node" name="cloneNode">
              <params>
                <param optional="False" type="boolean" name="deep" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="NodeList" extends="">
          <functions>
            <function returns="Node" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
        </interface>
        <interface name="Notation" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="publicId" />
            <attribute readonly="True" type="DOMString" name="systemId" />
          </attributes>
        </interface>
        <interface name="ProcessingInstruction" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="target" />
            <attribute readonly="False" type="DOMString" name="data" />
          </attributes>
        </interface>
        <interface name="Text" extends="CharacterData">
          <functions>
            <function returns="Text" name="splitText">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
      </interfaces>
    </module>
    <module name="DOM1SE" disabled="False">
      <interfaces>
        <interface name="DOMException" extends="">
          <functions>
            <function returns="unsigned short" name="code" />
          </functions>
          <consts>
            <const type="unsigned short" name="INDEX_SIZE_ERR" value="1" />
            <const type="unsigned short" name="DOMSTRING_SIZE_ERR" value="2" />
            <const type="unsigned short" name="HIERARCHY_REQUEST_ERR" value="3" />
            <const type="unsigned short" name="WRONG_DOCUMENT_ERR" value="4" />
            <const type="unsigned short" name="INVALID_CHARACTER_ERR" value="5" />
            <const type="unsigned short" name="NO_DATA_ALLOWED_ERR" value="6" />
            <const type="unsigned short" name="NO_MODIFICATION_ALLOWED_ERR" value="7" />
            <const type="unsigned short" name="NOT_FOUND_ERR" value="8" />
            <const type="unsigned short" name="NOT_SUPPORTED_ERR" value="9" />
            <const type="unsigned short" name="INUSE_ATTRIBUTE_ERR" value="10" />
          </consts>
        </interface>
        <interface name="DOMImplementation" extends="">
          <functions>
            <function returns="boolean" name="hasFeature">
              <params>
                <param optional="False" type="DOMString" name="feature" />
                <param optional="False" type="DOMString" name="version" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="Node" extends="">
          <consts>
            <const type="unsigned short" name="ELEMENT_NODE" value="1" />
            <const type="unsigned short" name="ATTRIBUTE_NODE" value="2" />
            <const type="unsigned short" name="TEXT_NODE" value="3" />
            <const type="unsigned short" name="CDATA_SECTION_NODE" value="4" />
            <const type="unsigned short" name="ENTITY_REFERENCE_NODE" value="5" />
            <const type="unsigned short" name="ENTITY_NODE" value="6" />
            <const type="unsigned short" name="PROCESSING_INSTRUCTION_NODE" value="7" />
            <const type="unsigned short" name="COMMENT_NODE" value="8" />
            <const type="unsigned short" name="DOCUMENT_NODE" value="9" />
            <const type="unsigned short" name="DOCUMENT_TYPE_NODE" value="10" />
            <const type="unsigned short" name="DOCUMENT_FRAGMENT_NODE" value="11" />
            <const type="unsigned short" name="NOTATION_NODE" value="12" />
          </consts>
          <attributes>
            <attribute readonly="True" type="DOMString" name="nodeName" />
            <attribute readonly="False" type="DOMString" name="nodeValue" />
            <attribute readonly="True" type="unsigned short" name="nodeType" />
            <attribute readonly="True" type="Node" name="parentNode" />
            <attribute readonly="True" type="NodeList" name="childNodes" />
            <attribute readonly="True" type="Node" name="firstChild" />
            <attribute readonly="True" type="Node" name="lastChild" />
            <attribute readonly="True" type="Node" name="previousSibling" />
            <attribute readonly="True" type="Node" name="nextSibling" />
            <attribute readonly="True" type="NamedNodeMap" name="attributes" />
            <attribute readonly="True" type="Document" name="ownerDocument" />
          </attributes>
          <functions>
            <function returns="Node" name="insertBefore">
              <params>
                <param optional="False" type="Node" name="newChild" />
                <param optional="False" type="Node" name="refChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="replaceChild">
              <params>
                <param optional="False" type="Node" name="newChild" />
                <param optional="False" type="Node" name="oldChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="removeChild">
              <params>
                <param optional="False" type="Node" name="oldChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="appendChild">
              <params>
                <param optional="False" type="Node" name="newChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="boolean" name="hasChildNodes" />
            <function returns="Node" name="cloneNode">
              <params>
                <param optional="False" type="boolean" name="deep" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="NodeList" extends="">
          <functions>
            <function returns="Node" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
        </interface>
        <interface name="NamedNodeMap" extends="">
          <functions>
            <function returns="Node" name="getNamedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="Node" name="setNamedItem">
              <params>
                <param optional="False" type="Node" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="removeNamedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
        </interface>
        <interface name="CharacterData" extends="Node">
          <attributes>
            <attribute readonly="False" type="DOMString" name="data" />
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="DOMString" name="substringData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="appendData">
              <params>
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="insertData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="replaceData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="Attr" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="boolean" name="specified" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
        </interface>
        <interface name="Element" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="tagName" />
          </attributes>
          <functions>
            <function returns="DOMString" name="getAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="void" name="setAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="DOMString" name="value" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="getAttributeNode">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="Attr" name="setAttributeNode">
              <params>
                <param optional="False" type="Attr" name="newAttr" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="removeAttributeNode">
              <params>
                <param optional="False" type="Attr" name="oldAttr" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="NodeList" name="getElementsByTagName">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="void" name="normalize" />
          </functions>
        </interface>
        <interface name="Text" extends="CharacterData">
          <functions>
            <function returns="Text" name="splitText">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="Comment" extends="CharacterData" />
        <interface name="CDATASection" extends="Text" />
        <interface name="DocumentType" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="NamedNodeMap" name="entities" />
            <attribute readonly="True" type="NamedNodeMap" name="notations" />
          </attributes>
        </interface>
        <interface name="Notation" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="publicId" />
            <attribute readonly="True" type="DOMString" name="systemId" />
          </attributes>
        </interface>
        <interface name="Entity" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="publicId" />
            <attribute readonly="True" type="DOMString" name="systemId" />
            <attribute readonly="True" type="DOMString" name="notationName" />
          </attributes>
        </interface>
        <interface name="EntityReference" extends="Node" />
        <interface name="ProcessingInstruction" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="target" />
            <attribute readonly="False" type="DOMString" name="data" />
          </attributes>
        </interface>
        <interface name="DocumentFragment" extends="Node" />
        <interface name="Document" extends="Node">
          <attributes>
            <attribute readonly="True" type="DocumentType" name="doctype" />
            <attribute readonly="True" type="DOMImplementation" name="implementation" />
            <attribute readonly="True" type="Element" name="documentElement" />
          </attributes>
          <functions>
            <function returns="Element" name="createElement">
              <params>
                <param optional="False" type="DOMString" name="tagName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DocumentFragment" name="createDocumentFragment" />
            <function returns="Text" name="createTextNode">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
            </function>
            <function returns="Comment" name="createComment">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
            </function>
            <function returns="CDATASection" name="createCDATASection">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="ProcessingInstruction" name="createProcessingInstruction">
              <params>
                <param optional="False" type="DOMString" name="target" />
                <param optional="False" type="DOMString" name="data" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="createAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="EntityReference" name="createEntityReference">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="NodeList" name="getElementsByTagName">
              <params>
                <param optional="False" type="DOMString" name="tagname" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="HTMLCollection" extends="">
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="Node" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="Node" name="namedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="HTMLDocument" extends="Document">
          <attributes>
            <attribute readonly="False" type="DOMString" name="title" />
            <attribute readonly="True" type="DOMString" name="referrer" />
            <attribute readonly="True" type="DOMString" name="domain" />
            <attribute readonly="True" type="DOMString" name="URL" />
            <attribute readonly="False" type="HTMLElement" name="body" />
            <attribute readonly="True" type="HTMLCollection" name="images" />
            <attribute readonly="True" type="HTMLCollection" name="applets" />
            <attribute readonly="True" type="HTMLCollection" name="links" />
            <attribute readonly="True" type="HTMLCollection" name="forms" />
            <attribute readonly="True" type="HTMLCollection" name="anchors" />
            <attribute readonly="False" type="DOMString" name="cookie" />
          </attributes>
          <functions>
            <function returns="void" name="open" />
            <function returns="void" name="close" />
            <function returns="void" name="write">
              <params>
                <param optional="False" type="DOMString" name="text" />
              </params>
            </function>
            <function returns="void" name="writeln">
              <params>
                <param optional="False" type="DOMString" name="text" />
              </params>
            </function>
            <function returns="Element" name="getElementById">
              <params>
                <param optional="False" type="DOMString" name="elementId" />
              </params>
            </function>
            <function returns="NodeList" name="getElementsByName">
              <params>
                <param optional="False" type="DOMString" name="elementName" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="HTMLElement" extends="Element">
          <attributes>
            <attribute readonly="False" type="DOMString" name="id" />
            <attribute readonly="False" type="DOMString" name="title" />
            <attribute readonly="False" type="DOMString" name="lang" />
            <attribute readonly="False" type="DOMString" name="dir" />
            <attribute readonly="False" type="DOMString" name="className" />
          </attributes>
        </interface>
        <interface name="HTMLHtmlElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="version" />
          </attributes>
        </interface>
        <interface name="HTMLHeadElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="profile" />
          </attributes>
        </interface>
        <interface name="HTMLLinkElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="charset" />
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="DOMString" name="hreflang" />
            <attribute readonly="False" type="DOMString" name="media" />
            <attribute readonly="False" type="DOMString" name="rel" />
            <attribute readonly="False" type="DOMString" name="rev" />
            <attribute readonly="False" type="DOMString" name="target" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLTitleElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="text" />
          </attributes>
        </interface>
        <interface name="HTMLMetaElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="content" />
            <attribute readonly="False" type="DOMString" name="httpEquiv" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="scheme" />
          </attributes>
        </interface>
        <interface name="HTMLBaseElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="DOMString" name="target" />
          </attributes>
        </interface>
        <interface name="HTMLIsIndexElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="prompt" />
          </attributes>
        </interface>
        <interface name="HTMLStyleElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="media" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLBodyElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="aLink" />
            <attribute readonly="False" type="DOMString" name="background" />
            <attribute readonly="False" type="DOMString" name="bgColor" />
            <attribute readonly="False" type="DOMString" name="link" />
            <attribute readonly="False" type="DOMString" name="text" />
            <attribute readonly="False" type="DOMString" name="vLink" />
          </attributes>
        </interface>
        <interface name="HTMLFormElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLCollection" name="elements" />
            <attribute readonly="True" type="long" name="length" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="acceptCharset" />
            <attribute readonly="False" type="DOMString" name="action" />
            <attribute readonly="False" type="DOMString" name="enctype" />
            <attribute readonly="False" type="DOMString" name="method" />
            <attribute readonly="False" type="DOMString" name="target" />
          </attributes>
          <functions>
            <function returns="void" name="submit" />
            <function returns="void" name="reset" />
          </functions>
        </interface>
        <interface name="HTMLSelectElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="False" type="long" name="selectedIndex" />
            <attribute readonly="False" type="DOMString" name="value" />
            <attribute readonly="True" type="long" name="length" />
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="True" type="HTMLCollection" name="options" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="boolean" name="multiple" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="long" name="size" />
            <attribute readonly="False" type="long" name="tabIndex" />
          </attributes>
          <functions>
            <function returns="void" name="add">
              <params>
                <param optional="False" type="HTMLElement" name="element" />
                <param optional="False" type="HTMLElement" name="before" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="remove">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
            </function>
            <function returns="void" name="blur" />
            <function returns="void" name="focus" />
          </functions>
        </interface>
        <interface name="HTMLOptGroupElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="label" />
          </attributes>
        </interface>
        <interface name="HTMLOptionElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="boolean" name="defaultSelected" />
            <attribute readonly="True" type="DOMString" name="text" />
            <attribute readonly="True" type="long" name="index" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="label" />
            <attribute readonly="False" type="boolean" name="selected" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
        </interface>
        <interface name="HTMLInputElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="defaultValue" />
            <attribute readonly="False" type="boolean" name="defaultChecked" />
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accept" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="alt" />
            <attribute readonly="False" type="boolean" name="checked" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="long" name="maxLength" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="boolean" name="readOnly" />
            <attribute readonly="False" type="DOMString" name="size" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="useMap" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
          <functions>
            <function returns="void" name="blur" />
            <function returns="void" name="focus" />
            <function returns="void" name="select" />
            <function returns="void" name="click" />
          </functions>
        </interface>
        <interface name="HTMLTextAreaElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="defaultValue" />
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="long" name="cols" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="boolean" name="readOnly" />
            <attribute readonly="False" type="long" name="rows" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
          <functions>
            <function returns="void" name="blur" />
            <function returns="void" name="focus" />
            <function returns="void" name="select" />
          </functions>
        </interface>
        <interface name="HTMLButtonElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
        </interface>
        <interface name="HTMLLabelElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="htmlFor" />
          </attributes>
        </interface>
        <interface name="HTMLFieldSetElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
          </attributes>
        </interface>
        <interface name="HTMLLegendElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLUListElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLOListElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
            <attribute readonly="False" type="long" name="start" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLDListElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
          </attributes>
        </interface>
        <interface name="HTMLDirectoryElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
          </attributes>
        </interface>
        <interface name="HTMLMenuElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
          </attributes>
        </interface>
        <interface name="HTMLLIElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="type" />
            <attribute readonly="False" type="long" name="value" />
          </attributes>
        </interface>
        <interface name="HTMLDivElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLParagraphElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLHeadingElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLQuoteElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="cite" />
          </attributes>
        </interface>
        <interface name="HTMLPreElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="long" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLBRElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="clear" />
          </attributes>
        </interface>
        <interface name="HTMLBaseFontElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="color" />
            <attribute readonly="False" type="DOMString" name="face" />
            <attribute readonly="False" type="DOMString" name="size" />
          </attributes>
        </interface>
        <interface name="HTMLFontElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="color" />
            <attribute readonly="False" type="DOMString" name="face" />
            <attribute readonly="False" type="DOMString" name="size" />
          </attributes>
        </interface>
        <interface name="HTMLHRElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="boolean" name="noShade" />
            <attribute readonly="False" type="DOMString" name="size" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLModElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="cite" />
            <attribute readonly="False" type="DOMString" name="dateTime" />
          </attributes>
        </interface>
        <interface name="HTMLAnchorElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="charset" />
            <attribute readonly="False" type="DOMString" name="coords" />
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="DOMString" name="hreflang" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="rel" />
            <attribute readonly="False" type="DOMString" name="rev" />
            <attribute readonly="False" type="DOMString" name="shape" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="False" type="DOMString" name="target" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
          <functions>
            <function returns="void" name="blur" />
            <function returns="void" name="focus" />
          </functions>
        </interface>
        <interface name="HTMLImageElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="lowSrc" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="alt" />
            <attribute readonly="False" type="DOMString" name="border" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="DOMString" name="hspace" />
            <attribute readonly="False" type="boolean" name="isMap" />
            <attribute readonly="False" type="DOMString" name="longDesc" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="False" type="DOMString" name="useMap" />
            <attribute readonly="False" type="DOMString" name="vspace" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLObjectElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="code" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="archive" />
            <attribute readonly="False" type="DOMString" name="border" />
            <attribute readonly="False" type="DOMString" name="codeBase" />
            <attribute readonly="False" type="DOMString" name="codeType" />
            <attribute readonly="False" type="DOMString" name="data" />
            <attribute readonly="False" type="boolean" name="declare" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="DOMString" name="hspace" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="standby" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="False" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="useMap" />
            <attribute readonly="False" type="DOMString" name="vspace" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLParamElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="value" />
            <attribute readonly="False" type="DOMString" name="valueType" />
          </attributes>
        </interface>
        <interface name="HTMLAppletElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="alt" />
            <attribute readonly="False" type="DOMString" name="archive" />
            <attribute readonly="False" type="DOMString" name="code" />
            <attribute readonly="False" type="DOMString" name="codeBase" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="DOMString" name="hspace" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="object" />
            <attribute readonly="False" type="DOMString" name="vspace" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLMapElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLCollection" name="areas" />
            <attribute readonly="False" type="DOMString" name="name" />
          </attributes>
        </interface>
        <interface name="HTMLAreaElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="alt" />
            <attribute readonly="False" type="DOMString" name="coords" />
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="boolean" name="noHref" />
            <attribute readonly="False" type="DOMString" name="shape" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="False" type="DOMString" name="target" />
          </attributes>
        </interface>
        <interface name="HTMLScriptElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="text" />
            <attribute readonly="False" type="DOMString" name="htmlFor" />
            <attribute readonly="False" type="DOMString" name="event" />
            <attribute readonly="False" type="DOMString" name="charset" />
            <attribute readonly="False" type="boolean" name="defer" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLTableElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="HTMLTableCaptionElement" name="caption" />
            <attribute readonly="False" type="HTMLTableSectionElement" name="tHead" />
            <attribute readonly="False" type="HTMLTableSectionElement" name="tFoot" />
            <attribute readonly="True" type="HTMLCollection" name="rows" />
            <attribute readonly="True" type="HTMLCollection" name="tBodies" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="bgColor" />
            <attribute readonly="False" type="DOMString" name="border" />
            <attribute readonly="False" type="DOMString" name="cellPadding" />
            <attribute readonly="False" type="DOMString" name="cellSpacing" />
            <attribute readonly="False" type="DOMString" name="frame" />
            <attribute readonly="False" type="DOMString" name="rules" />
            <attribute readonly="False" type="DOMString" name="summary" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
          <functions>
            <function returns="HTMLElement" name="createTHead" />
            <function returns="void" name="deleteTHead" />
            <function returns="HTMLElement" name="createTFoot" />
            <function returns="void" name="deleteTFoot" />
            <function returns="HTMLElement" name="createCaption" />
            <function returns="void" name="deleteCaption" />
            <function returns="HTMLElement" name="insertRow">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteRow">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="HTMLTableCaptionElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLTableColElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="ch" />
            <attribute readonly="False" type="DOMString" name="chOff" />
            <attribute readonly="False" type="long" name="span" />
            <attribute readonly="False" type="DOMString" name="vAlign" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLTableSectionElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="ch" />
            <attribute readonly="False" type="DOMString" name="chOff" />
            <attribute readonly="False" type="DOMString" name="vAlign" />
            <attribute readonly="True" type="HTMLCollection" name="rows" />
          </attributes>
          <functions>
            <function returns="HTMLElement" name="insertRow">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteRow">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="HTMLTableRowElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="long" name="rowIndex" />
            <attribute readonly="True" type="long" name="sectionRowIndex" />
            <attribute readonly="True" type="HTMLCollection" name="cells" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="bgColor" />
            <attribute readonly="False" type="DOMString" name="ch" />
            <attribute readonly="False" type="DOMString" name="chOff" />
            <attribute readonly="False" type="DOMString" name="vAlign" />
          </attributes>
          <functions>
            <function returns="HTMLElement" name="insertCell">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteCell">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="HTMLTableCellElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="long" name="cellIndex" />
            <attribute readonly="False" type="DOMString" name="abbr" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="axis" />
            <attribute readonly="False" type="DOMString" name="bgColor" />
            <attribute readonly="False" type="DOMString" name="ch" />
            <attribute readonly="False" type="DOMString" name="chOff" />
            <attribute readonly="False" type="long" name="colSpan" />
            <attribute readonly="False" type="DOMString" name="headers" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="boolean" name="noWrap" />
            <attribute readonly="False" type="long" name="rowSpan" />
            <attribute readonly="False" type="DOMString" name="scope" />
            <attribute readonly="False" type="DOMString" name="vAlign" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLFrameSetElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="cols" />
            <attribute readonly="False" type="DOMString" name="rows" />
          </attributes>
        </interface>
        <interface name="HTMLFrameElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="frameBorder" />
            <attribute readonly="False" type="DOMString" name="longDesc" />
            <attribute readonly="False" type="DOMString" name="marginHeight" />
            <attribute readonly="False" type="DOMString" name="marginWidth" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="boolean" name="noResize" />
            <attribute readonly="False" type="DOMString" name="scrolling" />
            <attribute readonly="False" type="DOMString" name="src" />
          </attributes>
        </interface>
        <interface name="HTMLIFrameElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="frameBorder" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="DOMString" name="longDesc" />
            <attribute readonly="False" type="DOMString" name="marginHeight" />
            <attribute readonly="False" type="DOMString" name="marginWidth" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="scrolling" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
      </interfaces>
    </module>
    <module name="DOM2" disabled="False">
      <interfaces>
        <interface name="DOMException" extends="">
          <functions>
            <function returns="unsigned short" name="code" />
          </functions>
          <consts>
            <const type="unsigned short" name="INDEX_SIZE_ERR" value="1" />
            <const type="unsigned short" name="DOMSTRING_SIZE_ERR" value="2" />
            <const type="unsigned short" name="HIERARCHY_REQUEST_ERR" value="3" />
            <const type="unsigned short" name="WRONG_DOCUMENT_ERR" value="4" />
            <const type="unsigned short" name="INVALID_CHARACTER_ERR" value="5" />
            <const type="unsigned short" name="NO_DATA_ALLOWED_ERR" value="6" />
            <const type="unsigned short" name="NO_MODIFICATION_ALLOWED_ERR" value="7" />
            <const type="unsigned short" name="NOT_FOUND_ERR" value="8" />
            <const type="unsigned short" name="NOT_SUPPORTED_ERR" value="9" />
            <const type="unsigned short" name="INUSE_ATTRIBUTE_ERR" value="10" />
            <const type="unsigned short" name="INVALID_STATE_ERR" value="11" />
            <const type="unsigned short" name="SYNTAX_ERR" value="12" />
            <const type="unsigned short" name="INVALID_MODIFICATION_ERR" value="13" />
            <const type="unsigned short" name="NAMESPACE_ERR" value="14" />
            <const type="unsigned short" name="INVALID_ACCESS_ERR" value="15" />
          </consts>
        </interface>
        <interface name="DOMImplementation" extends="">
          <functions>
            <function returns="boolean" name="hasFeature">
              <params>
                <param optional="False" type="DOMString" name="feature" />
                <param optional="False" type="DOMString" name="version" />
              </params>
            </function>
            <function returns="DocumentType" name="createDocumentType">
              <params>
                <param optional="False" type="DOMString" name="qualifiedName" />
                <param optional="False" type="DOMString" name="publicId" />
                <param optional="False" type="DOMString" name="systemId" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Document" name="createDocument">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="qualifiedName" />
                <param optional="False" type="DocumentType" name="doctype" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="Node" extends="">
          <consts>
            <const type="unsigned short" name="ELEMENT_NODE" value="1" />
            <const type="unsigned short" name="ATTRIBUTE_NODE" value="2" />
            <const type="unsigned short" name="TEXT_NODE" value="3" />
            <const type="unsigned short" name="CDATA_SECTION_NODE" value="4" />
            <const type="unsigned short" name="ENTITY_REFERENCE_NODE" value="5" />
            <const type="unsigned short" name="ENTITY_NODE" value="6" />
            <const type="unsigned short" name="PROCESSING_INSTRUCTION_NODE" value="7" />
            <const type="unsigned short" name="COMMENT_NODE" value="8" />
            <const type="unsigned short" name="DOCUMENT_NODE" value="9" />
            <const type="unsigned short" name="DOCUMENT_TYPE_NODE" value="10" />
            <const type="unsigned short" name="DOCUMENT_FRAGMENT_NODE" value="11" />
            <const type="unsigned short" name="NOTATION_NODE" value="12" />
          </consts>
          <attributes>
            <attribute readonly="True" type="DOMString" name="nodeName" />
            <attribute readonly="False" type="DOMString" name="nodeValue" />
            <attribute readonly="True" type="unsigned short" name="nodeType" />
            <attribute readonly="True" type="Node" name="parentNode" />
            <attribute readonly="True" type="NodeList" name="childNodes" />
            <attribute readonly="True" type="Node" name="firstChild" />
            <attribute readonly="True" type="Node" name="lastChild" />
            <attribute readonly="True" type="Node" name="previousSibling" />
            <attribute readonly="True" type="Node" name="nextSibling" />
            <attribute readonly="True" type="NamedNodeMap" name="attributes" />
            <attribute readonly="True" type="Document" name="ownerDocument" />
            <attribute readonly="True" type="DOMString" name="namespaceURI" />
            <attribute readonly="False" type="DOMString" name="prefix" />
            <attribute readonly="True" type="DOMString" name="localName" />
          </attributes>
          <functions>
            <function returns="Node" name="insertBefore">
              <params>
                <param optional="False" type="Node" name="newChild" />
                <param optional="False" type="Node" name="refChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="replaceChild">
              <params>
                <param optional="False" type="Node" name="newChild" />
                <param optional="False" type="Node" name="oldChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="removeChild">
              <params>
                <param optional="False" type="Node" name="oldChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="appendChild">
              <params>
                <param optional="False" type="Node" name="newChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="boolean" name="hasChildNodes" />
            <function returns="Node" name="cloneNode">
              <params>
                <param optional="False" type="boolean" name="deep" />
              </params>
            </function>
            <function returns="void" name="normalize" />
            <function returns="boolean" name="isSupported">
              <params>
                <param optional="False" type="DOMString" name="feature" />
                <param optional="False" type="DOMString" name="version" />
              </params>
            </function>
            <function returns="boolean" name="hasAttributes" />
          </functions>
        </interface>
        <interface name="NodeList" extends="">
          <functions>
            <function returns="Node" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
        </interface>
        <interface name="NamedNodeMap" extends="">
          <functions>
            <function returns="Node" name="getNamedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="Node" name="setNamedItem">
              <params>
                <param optional="False" type="Node" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="removeNamedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="Node" name="getNamedItemNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
            </function>
            <function returns="Node" name="setNamedItemNS">
              <params>
                <param optional="False" type="Node" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="removeNamedItemNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
        </interface>
        <interface name="CharacterData" extends="Node">
          <attributes>
            <attribute readonly="False" type="DOMString" name="data" />
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="DOMString" name="substringData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="appendData">
              <params>
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="insertData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="replaceData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="Attr" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="boolean" name="specified" />
            <attribute readonly="False" type="DOMString" name="value" />
            <attribute readonly="True" type="Element" name="ownerElement" />
          </attributes>
        </interface>
        <interface name="Text" extends="CharacterData">
          <functions>
            <function returns="Text" name="splitText">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="Comment" extends="CharacterData" />
        <interface name="CDATASection" extends="Text" />
        <interface name="DocumentType" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="NamedNodeMap" name="entities" />
            <attribute readonly="True" type="NamedNodeMap" name="notations" />
            <attribute readonly="True" type="DOMString" name="publicId" />
            <attribute readonly="True" type="DOMString" name="systemId" />
            <attribute readonly="True" type="DOMString" name="internalSubset" />
          </attributes>
        </interface>
        <interface name="Notation" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="publicId" />
            <attribute readonly="True" type="DOMString" name="systemId" />
          </attributes>
        </interface>
        <interface name="Entity" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="publicId" />
            <attribute readonly="True" type="DOMString" name="systemId" />
            <attribute readonly="True" type="DOMString" name="notationName" />
          </attributes>
        </interface>
        <interface name="EntityReference" extends="Node" />
        <interface name="ProcessingInstruction" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="target" />
            <attribute readonly="False" type="DOMString" name="data" />
          </attributes>
        </interface>
        <interface name="DocumentFragment" extends="Node" />
        <interface name="Document" extends="Node">
          <attributes>
            <attribute readonly="True" type="DocumentType" name="doctype" />
            <attribute readonly="True" type="DOMImplementation" name="implementation" />
            <attribute readonly="True" type="Element" name="documentElement" />
          </attributes>
          <functions>
            <function returns="Element" name="createElement">
              <params>
                <param optional="False" type="DOMString" name="tagName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DocumentFragment" name="createDocumentFragment" />
            <function returns="Text" name="createTextNode">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
            </function>
            <function returns="Comment" name="createComment">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
            </function>
            <function returns="CDATASection" name="createCDATASection">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="ProcessingInstruction" name="createProcessingInstruction">
              <params>
                <param optional="False" type="DOMString" name="target" />
                <param optional="False" type="DOMString" name="data" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="createAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="EntityReference" name="createEntityReference">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="NodeList" name="getElementsByTagName">
              <params>
                <param optional="False" type="DOMString" name="tagname" />
              </params>
            </function>
            <function returns="Node" name="importNode">
              <params>
                <param optional="False" type="Node" name="importedNode" />
                <param optional="False" type="boolean" name="deep" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Element" name="createElementNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="qualifiedName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="createAttributeNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="qualifiedName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="NodeList" name="getElementsByTagNameNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
            </function>
            <function returns="Element" name="getElementById">
              <params>
                <param optional="False" type="DOMString" name="elementId" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="AbstractView" extends="">
          <attributes>
            <attribute readonly="True" type="DocumentView" name="document" />
          </attributes>
        </interface>
        <interface name="DocumentView" extends="">
          <attributes>
            <attribute readonly="True" type="AbstractView" name="defaultView" />
          </attributes>
        </interface>
        <interface name="EventException" extends="">
          <functions>
            <function returns="unsigned short" name="code" />
          </functions>
          <consts>
            <const type="unsigned short" name="UNSPECIFIED_EVENT_TYPE_ERR" value="0" />
          </consts>
        </interface>
        <interface name="EventTarget" extends="">
          <functions>
            <function returns="void" name="addEventListener">
              <params>
                <param optional="False" type="DOMString" name="type" />
                <param optional="False" type="EventListener" name="listener" />
                <param optional="False" type="boolean" name="useCapture" />
              </params>
            </function>
            <function returns="void" name="removeEventListener">
              <params>
                <param optional="False" type="DOMString" name="type" />
                <param optional="False" type="EventListener" name="listener" />
                <param optional="False" type="boolean" name="useCapture" />
              </params>
            </function>
            <function returns="boolean" name="dispatchEvent">
              <params>
                <param optional="False" type="Event" name="evt" />
              </params>
              <raises>
                <exception name="EventException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="EventListener" extends="">
          <functions>
            <function returns="void" name="handleEvent">
              <params>
                <param optional="False" type="Event" name="evt" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="Event" extends="">
          <consts>
            <const type="unsigned short" name="CAPTURING_PHASE" value="1" />
            <const type="unsigned short" name="AT_TARGET" value="2" />
            <const type="unsigned short" name="BUBBLING_PHASE" value="3" />
          </consts>
          <attributes>
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="True" type="EventTarget" name="target" />
            <attribute readonly="True" type="EventTarget" name="currentTarget" />
            <attribute readonly="True" type="unsigned short" name="eventPhase" />
            <attribute readonly="True" type="boolean" name="bubbles" />
            <attribute readonly="True" type="boolean" name="cancelable" />
            <attribute readonly="True" type="DOMTimeStamp" name="timeStamp" />
          </attributes>
          <functions>
            <function returns="void" name="stopPropagation" />
            <function returns="void" name="preventDefault" />
            <function returns="void" name="initEvent">
              <params>
                <param optional="False" type="DOMString" name="eventTypeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="DocumentEvent" extends="">
          <functions>
            <function returns="Event" name="createEvent">
              <params>
                <param optional="False" type="DOMString" name="eventType" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="UIEvent" extends="Event">
          <attributes>
            <attribute readonly="True" type="AbstractView" name="view" />
            <attribute readonly="True" type="long" name="detail" />
          </attributes>
          <functions>
            <function returns="void" name="initUIEvent">
              <params>
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="AbstractView" name="viewArg" />
                <param optional="False" type="long" name="detailArg" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="MouseEvent" extends="UIEvent">
          <attributes>
            <attribute readonly="True" type="long" name="screenX" />
            <attribute readonly="True" type="long" name="screenY" />
            <attribute readonly="True" type="long" name="clientX" />
            <attribute readonly="True" type="long" name="clientY" />
            <attribute readonly="True" type="boolean" name="ctrlKey" />
            <attribute readonly="True" type="boolean" name="shiftKey" />
            <attribute readonly="True" type="boolean" name="altKey" />
            <attribute readonly="True" type="boolean" name="metaKey" />
            <attribute readonly="True" type="unsigned short" name="button" />
            <attribute readonly="True" type="EventTarget" name="relatedTarget" />
          </attributes>
          <functions>
            <function returns="void" name="initMouseEvent">
              <params>
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="AbstractView" name="viewArg" />
                <param optional="False" type="long" name="detailArg" />
                <param optional="False" type="long" name="screenXArg" />
                <param optional="False" type="long" name="screenYArg" />
                <param optional="False" type="long" name="clientXArg" />
                <param optional="False" type="long" name="clientYArg" />
                <param optional="False" type="boolean" name="ctrlKeyArg" />
                <param optional="False" type="boolean" name="altKeyArg" />
                <param optional="False" type="boolean" name="shiftKeyArg" />
                <param optional="False" type="boolean" name="metaKeyArg" />
                <param optional="False" type="unsigned short" name="buttonArg" />
                <param optional="False" type="EventTarget" name="relatedTargetArg" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="MutationEvent" extends="Event">
          <consts>
            <const type="unsigned short" name="MODIFICATION" value="1" />
            <const type="unsigned short" name="ADDITION" value="2" />
            <const type="unsigned short" name="REMOVAL" value="3" />
          </consts>
          <attributes>
            <attribute readonly="True" type="Node" name="relatedNode" />
            <attribute readonly="True" type="DOMString" name="prevValue" />
            <attribute readonly="True" type="DOMString" name="newValue" />
            <attribute readonly="True" type="DOMString" name="attrName" />
            <attribute readonly="True" type="unsigned short" name="attrChange" />
          </attributes>
          <functions>
            <function returns="void" name="initMutationEvent">
              <params>
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="Node" name="relatedNodeArg" />
                <param optional="False" type="DOMString" name="prevValueArg" />
                <param optional="False" type="DOMString" name="newValueArg" />
                <param optional="False" type="DOMString" name="attrNameArg" />
                <param optional="False" type="unsigned short" name="attrChangeArg" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="CSSRuleList" extends="">
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="CSSRule" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="CSSRule" extends="">
          <consts>
            <const type="unsigned short" name="UNKNOWN_RULE" value="0" />
            <const type="unsigned short" name="STYLE_RULE" value="1" />
            <const type="unsigned short" name="CHARSET_RULE" value="2" />
            <const type="unsigned short" name="IMPORT_RULE" value="3" />
            <const type="unsigned short" name="MEDIA_RULE" value="4" />
            <const type="unsigned short" name="FONT_FACE_RULE" value="5" />
            <const type="unsigned short" name="PAGE_RULE" value="6" />
          </consts>
          <attributes>
            <attribute readonly="True" type="unsigned short" name="type" />
            <attribute readonly="False" type="DOMString" name="cssText" />
            <attribute readonly="True" type="CSSStyleSheet" name="parentStyleSheet" />
            <attribute readonly="True" type="CSSRule" name="parentRule" />
          </attributes>
        </interface>
        <interface name="CSSStyleRule" extends="CSSRule">
          <attributes>
            <attribute readonly="False" type="DOMString" name="selectorText" />
            <attribute readonly="True" type="CSSStyleDeclaration" name="style" />
          </attributes>
        </interface>
        <interface name="CSSMediaRule" extends="CSSRule">
          <attributes>
            <attribute readonly="True" type="MediaList" name="media" />
            <attribute readonly="True" type="CSSRuleList" name="cssRules" />
          </attributes>
          <functions>
            <function returns="unsigned long" name="insertRule">
              <params>
                <param optional="False" type="DOMString" name="rule" />
                <param optional="False" type="unsigned long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteRule">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="CSSFontFaceRule" extends="CSSRule">
          <attributes>
            <attribute readonly="True" type="CSSStyleDeclaration" name="style" />
          </attributes>
        </interface>
        <interface name="CSSPageRule" extends="CSSRule">
          <attributes>
            <attribute readonly="False" type="DOMString" name="selectorText" />
            <attribute readonly="True" type="CSSStyleDeclaration" name="style" />
          </attributes>
        </interface>
        <interface name="CSSImportRule" extends="CSSRule">
          <attributes>
            <attribute readonly="True" type="DOMString" name="href" />
            <attribute readonly="True" type="MediaList" name="media" />
            <attribute readonly="True" type="CSSStyleSheet" name="styleSheet" />
          </attributes>
        </interface>
        <interface name="CSSCharsetRule" extends="CSSRule">
          <attributes>
            <attribute readonly="False" type="DOMString" name="encoding" />
          </attributes>
        </interface>
        <interface name="CSSUnknownRule" extends="CSSRule" />
        <interface name="CSSStyleDeclaration" extends="">
          <attributes>
            <attribute readonly="False" type="DOMString" name="cssText" />
            <attribute readonly="True" type="unsigned long" name="length" />
            <attribute readonly="True" type="CSSRule" name="parentRule" />
          </attributes>
          <functions>
            <function returns="DOMString" name="getPropertyValue">
              <params>
                <param optional="False" type="DOMString" name="propertyName" />
              </params>
            </function>
            <function returns="CSSValue" name="getPropertyCSSValue">
              <params>
                <param optional="False" type="DOMString" name="propertyName" />
              </params>
            </function>
            <function returns="DOMString" name="removeProperty">
              <params>
                <param optional="False" type="DOMString" name="propertyName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DOMString" name="getPropertyPriority">
              <params>
                <param optional="False" type="DOMString" name="propertyName" />
              </params>
            </function>
            <function returns="void" name="setProperty">
              <params>
                <param optional="False" type="DOMString" name="propertyName" />
                <param optional="False" type="DOMString" name="value" />
                <param optional="False" type="DOMString" name="priority" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DOMString" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="CSSValue" extends="">
          <consts>
            <const type="unsigned short" name="CSS_INHERIT" value="0" />
            <const type="unsigned short" name="CSS_PRIMITIVE_VALUE" value="1" />
            <const type="unsigned short" name="CSS_VALUE_LIST" value="2" />
            <const type="unsigned short" name="CSS_CUSTOM" value="3" />
          </consts>
          <attributes>
            <attribute readonly="False" type="DOMString" name="cssText" />
            <attribute readonly="True" type="unsigned short" name="cssValueType" />
          </attributes>
        </interface>
        <interface name="CSSPrimitiveValue" extends="CSSValue">
          <consts>
            <const type="unsigned short" name="CSS_UNKNOWN" value="0" />
            <const type="unsigned short" name="CSS_NUMBER" value="1" />
            <const type="unsigned short" name="CSS_PERCENTAGE" value="2" />
            <const type="unsigned short" name="CSS_EMS" value="3" />
            <const type="unsigned short" name="CSS_EXS" value="4" />
            <const type="unsigned short" name="CSS_PX" value="5" />
            <const type="unsigned short" name="CSS_CM" value="6" />
            <const type="unsigned short" name="CSS_MM" value="7" />
            <const type="unsigned short" name="CSS_IN" value="8" />
            <const type="unsigned short" name="CSS_PT" value="9" />
            <const type="unsigned short" name="CSS_PC" value="10" />
            <const type="unsigned short" name="CSS_DEG" value="11" />
            <const type="unsigned short" name="CSS_RAD" value="12" />
            <const type="unsigned short" name="CSS_GRAD" value="13" />
            <const type="unsigned short" name="CSS_MS" value="14" />
            <const type="unsigned short" name="CSS_S" value="15" />
            <const type="unsigned short" name="CSS_HZ" value="16" />
            <const type="unsigned short" name="CSS_KHZ" value="17" />
            <const type="unsigned short" name="CSS_DIMENSION" value="18" />
            <const type="unsigned short" name="CSS_STRING" value="19" />
            <const type="unsigned short" name="CSS_URI" value="20" />
            <const type="unsigned short" name="CSS_IDENT" value="21" />
            <const type="unsigned short" name="CSS_ATTR" value="22" />
            <const type="unsigned short" name="CSS_COUNTER" value="23" />
            <const type="unsigned short" name="CSS_RECT" value="24" />
            <const type="unsigned short" name="CSS_RGBCOLOR" value="25" />
          </consts>
          <attributes>
            <attribute readonly="True" type="unsigned short" name="primitiveType" />
          </attributes>
          <functions>
            <function returns="void" name="setFloatValue">
              <params>
                <param optional="False" type="unsigned short" name="unitType" />
                <param optional="False" type="float" name="floatValue" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="float" name="getFloatValue">
              <params>
                <param optional="False" type="unsigned short" name="unitType" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="setStringValue">
              <params>
                <param optional="False" type="unsigned short" name="stringType" />
                <param optional="False" type="DOMString" name="stringValue" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DOMString" name="getStringValue">
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Counter" name="getCounterValue">
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Rect" name="getRectValue">
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="RGBColor" name="getRGBColorValue">
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="CSSValueList" extends="CSSValue">
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="CSSValue" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="RGBColor" extends="">
          <attributes>
            <attribute readonly="True" type="CSSPrimitiveValue" name="red" />
            <attribute readonly="True" type="CSSPrimitiveValue" name="green" />
            <attribute readonly="True" type="CSSPrimitiveValue" name="blue" />
          </attributes>
        </interface>
        <interface name="Rect" extends="">
          <attributes>
            <attribute readonly="True" type="CSSPrimitiveValue" name="top" />
            <attribute readonly="True" type="CSSPrimitiveValue" name="right" />
            <attribute readonly="True" type="CSSPrimitiveValue" name="bottom" />
            <attribute readonly="True" type="CSSPrimitiveValue" name="left" />
          </attributes>
        </interface>
        <interface name="Counter" extends="">
          <attributes>
            <attribute readonly="True" type="DOMString" name="identifier" />
            <attribute readonly="True" type="DOMString" name="listStyle" />
            <attribute readonly="True" type="DOMString" name="separator" />
          </attributes>
        </interface>
        <interface name="ElementCSSInlineStyle" extends="">
          <attributes>
            <attribute readonly="True" type="CSSStyleDeclaration" name="style" />
          </attributes>
        </interface>
        <interface name="CSS2Properties" extends="">
          <attributes>
            <attribute readonly="False" type="DOMString" name="azimuth" />
            <attribute readonly="False" type="DOMString" name="background" />
            <attribute readonly="False" type="DOMString" name="backgroundAttachment" />
            <attribute readonly="False" type="DOMString" name="backgroundColor" />
            <attribute readonly="False" type="DOMString" name="backgroundImage" />
            <attribute readonly="False" type="DOMString" name="backgroundPosition" />
            <attribute readonly="False" type="DOMString" name="backgroundRepeat" />
            <attribute readonly="False" type="DOMString" name="border" />
            <attribute readonly="False" type="DOMString" name="borderCollapse" />
            <attribute readonly="False" type="DOMString" name="borderColor" />
            <attribute readonly="False" type="DOMString" name="borderSpacing" />
            <attribute readonly="False" type="DOMString" name="borderStyle" />
            <attribute readonly="False" type="DOMString" name="borderTop" />
            <attribute readonly="False" type="DOMString" name="borderRight" />
            <attribute readonly="False" type="DOMString" name="borderBottom" />
            <attribute readonly="False" type="DOMString" name="borderLeft" />
            <attribute readonly="False" type="DOMString" name="borderTopColor" />
            <attribute readonly="False" type="DOMString" name="borderRightColor" />
            <attribute readonly="False" type="DOMString" name="borderBottomColor" />
            <attribute readonly="False" type="DOMString" name="borderLeftColor" />
            <attribute readonly="False" type="DOMString" name="borderTopStyle" />
            <attribute readonly="False" type="DOMString" name="borderRightStyle" />
            <attribute readonly="False" type="DOMString" name="borderBottomStyle" />
            <attribute readonly="False" type="DOMString" name="borderLeftStyle" />
            <attribute readonly="False" type="DOMString" name="borderTopWidth" />
            <attribute readonly="False" type="DOMString" name="borderRightWidth" />
            <attribute readonly="False" type="DOMString" name="borderBottomWidth" />
            <attribute readonly="False" type="DOMString" name="borderLeftWidth" />
            <attribute readonly="False" type="DOMString" name="borderWidth" />
            <attribute readonly="False" type="DOMString" name="bottom" />
            <attribute readonly="False" type="DOMString" name="captionSide" />
            <attribute readonly="False" type="DOMString" name="clear" />
            <attribute readonly="False" type="DOMString" name="clip" />
            <attribute readonly="False" type="DOMString" name="color" />
            <attribute readonly="False" type="DOMString" name="content" />
            <attribute readonly="False" type="DOMString" name="counterIncrement" />
            <attribute readonly="False" type="DOMString" name="counterReset" />
            <attribute readonly="False" type="DOMString" name="cue" />
            <attribute readonly="False" type="DOMString" name="cueAfter" />
            <attribute readonly="False" type="DOMString" name="cueBefore" />
            <attribute readonly="False" type="DOMString" name="cursor" />
            <attribute readonly="False" type="DOMString" name="direction" />
            <attribute readonly="False" type="DOMString" name="display" />
            <attribute readonly="False" type="DOMString" name="elevation" />
            <attribute readonly="False" type="DOMString" name="emptyCells" />
            <attribute readonly="False" type="DOMString" name="cssFloat" />
            <attribute readonly="False" type="DOMString" name="font" />
            <attribute readonly="False" type="DOMString" name="fontFamily" />
            <attribute readonly="False" type="DOMString" name="fontSize" />
            <attribute readonly="False" type="DOMString" name="fontSizeAdjust" />
            <attribute readonly="False" type="DOMString" name="fontStretch" />
            <attribute readonly="False" type="DOMString" name="fontStyle" />
            <attribute readonly="False" type="DOMString" name="fontVariant" />
            <attribute readonly="False" type="DOMString" name="fontWeight" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="DOMString" name="left" />
            <attribute readonly="False" type="DOMString" name="letterSpacing" />
            <attribute readonly="False" type="DOMString" name="lineHeight" />
            <attribute readonly="False" type="DOMString" name="listStyle" />
            <attribute readonly="False" type="DOMString" name="listStyleImage" />
            <attribute readonly="False" type="DOMString" name="listStylePosition" />
            <attribute readonly="False" type="DOMString" name="listStyleType" />
            <attribute readonly="False" type="DOMString" name="margin" />
            <attribute readonly="False" type="DOMString" name="marginTop" />
            <attribute readonly="False" type="DOMString" name="marginRight" />
            <attribute readonly="False" type="DOMString" name="marginBottom" />
            <attribute readonly="False" type="DOMString" name="marginLeft" />
            <attribute readonly="False" type="DOMString" name="markerOffset" />
            <attribute readonly="False" type="DOMString" name="marks" />
            <attribute readonly="False" type="DOMString" name="maxHeight" />
            <attribute readonly="False" type="DOMString" name="maxWidth" />
            <attribute readonly="False" type="DOMString" name="minHeight" />
            <attribute readonly="False" type="DOMString" name="minWidth" />
            <attribute readonly="False" type="DOMString" name="orphans" />
            <attribute readonly="False" type="DOMString" name="outline" />
            <attribute readonly="False" type="DOMString" name="outlineColor" />
            <attribute readonly="False" type="DOMString" name="outlineStyle" />
            <attribute readonly="False" type="DOMString" name="outlineWidth" />
            <attribute readonly="False" type="DOMString" name="overflow" />
            <attribute readonly="False" type="DOMString" name="padding" />
            <attribute readonly="False" type="DOMString" name="paddingTop" />
            <attribute readonly="False" type="DOMString" name="paddingRight" />
            <attribute readonly="False" type="DOMString" name="paddingBottom" />
            <attribute readonly="False" type="DOMString" name="paddingLeft" />
            <attribute readonly="False" type="DOMString" name="page" />
            <attribute readonly="False" type="DOMString" name="pageBreakAfter" />
            <attribute readonly="False" type="DOMString" name="pageBreakBefore" />
            <attribute readonly="False" type="DOMString" name="pageBreakInside" />
            <attribute readonly="False" type="DOMString" name="pause" />
            <attribute readonly="False" type="DOMString" name="pauseAfter" />
            <attribute readonly="False" type="DOMString" name="pauseBefore" />
            <attribute readonly="False" type="DOMString" name="pitch" />
            <attribute readonly="False" type="DOMString" name="pitchRange" />
            <attribute readonly="False" type="DOMString" name="playDuring" />
            <attribute readonly="False" type="DOMString" name="position" />
            <attribute readonly="False" type="DOMString" name="quotes" />
            <attribute readonly="False" type="DOMString" name="richness" />
            <attribute readonly="False" type="DOMString" name="right" />
            <attribute readonly="False" type="DOMString" name="size" />
            <attribute readonly="False" type="DOMString" name="speak" />
            <attribute readonly="False" type="DOMString" name="speakHeader" />
            <attribute readonly="False" type="DOMString" name="speakNumeral" />
            <attribute readonly="False" type="DOMString" name="speakPunctuation" />
            <attribute readonly="False" type="DOMString" name="speechRate" />
            <attribute readonly="False" type="DOMString" name="stress" />
            <attribute readonly="False" type="DOMString" name="tableLayout" />
            <attribute readonly="False" type="DOMString" name="textAlign" />
            <attribute readonly="False" type="DOMString" name="textDecoration" />
            <attribute readonly="False" type="DOMString" name="textIndent" />
            <attribute readonly="False" type="DOMString" name="textShadow" />
            <attribute readonly="False" type="DOMString" name="textTransform" />
            <attribute readonly="False" type="DOMString" name="top" />
            <attribute readonly="False" type="DOMString" name="unicodeBidi" />
            <attribute readonly="False" type="DOMString" name="verticalAlign" />
            <attribute readonly="False" type="DOMString" name="visibility" />
            <attribute readonly="False" type="DOMString" name="voiceFamily" />
            <attribute readonly="False" type="DOMString" name="volume" />
            <attribute readonly="False" type="DOMString" name="whiteSpace" />
            <attribute readonly="False" type="DOMString" name="widows" />
            <attribute readonly="False" type="DOMString" name="width" />
            <attribute readonly="False" type="DOMString" name="wordSpacing" />
            <attribute readonly="False" type="DOMString" name="zIndex" />
          </attributes>
        </interface>
        <interface name="CSSStyleSheet" extends="StyleSheet">
          <attributes>
            <attribute readonly="True" type="CSSRule" name="ownerRule" />
            <attribute readonly="True" type="CSSRuleList" name="cssRules" />
          </attributes>
          <functions>
            <function returns="unsigned long" name="insertRule">
              <params>
                <param optional="False" type="DOMString" name="rule" />
                <param optional="False" type="unsigned long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteRule">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="ViewCSS" extends="AbstractView">
          <functions>
            <function returns="CSSStyleDeclaration" name="getComputedStyle">
              <params>
                <param optional="False" type="Element" name="elt" />
                <param optional="False" type="DOMString" name="pseudoElt" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="DocumentCSS" extends="DocumentStyle">
          <functions>
            <function returns="CSSStyleDeclaration" name="getOverrideStyle">
              <params>
                <param optional="False" type="Element" name="elt" />
                <param optional="False" type="DOMString" name="pseudoElt" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="DOMImplementationCSS" extends="DOMImplementation">
          <functions>
            <function returns="CSSStyleSheet" name="createCSSStyleSheet">
              <params>
                <param optional="False" type="DOMString" name="title" />
                <param optional="False" type="DOMString" name="media" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="StyleSheet" extends="">
          <attributes>
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="True" type="Node" name="ownerNode" />
            <attribute readonly="True" type="StyleSheet" name="parentStyleSheet" />
            <attribute readonly="True" type="DOMString" name="href" />
            <attribute readonly="True" type="DOMString" name="title" />
            <attribute readonly="True" type="MediaList" name="media" />
          </attributes>
        </interface>
        <interface name="StyleSheetList" extends="">
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="StyleSheet" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="MediaList" extends="">
          <attributes>
            <attribute readonly="False" type="DOMString" name="mediaText" />
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="DOMString" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="void" name="deleteMedium">
              <params>
                <param optional="False" type="DOMString" name="oldMedium" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="appendMedium">
              <params>
                <param optional="False" type="DOMString" name="newMedium" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="LinkStyle" extends="">
          <attributes>
            <attribute readonly="True" type="StyleSheet" name="sheet" />
          </attributes>
        </interface>
        <interface name="DocumentStyle" extends="">
          <attributes>
            <attribute readonly="True" type="StyleSheetList" name="styleSheets" />
          </attributes>
        </interface>
        <interface name="RangeException" extends="">
          <functions>
            <function returns="unsigned short" name="code" />
          </functions>
          <consts>
            <const type="unsigned short" name="BAD_BOUNDARYPOINTS_ERR" value="1" />
            <const type="unsigned short" name="INVALID_NODE_TYPE_ERR" value="2" />
          </consts>
        </interface>
        <interface name="Range" extends="">
          <attributes>
            <attribute readonly="True" type="Node" name="startContainer" />
            <attribute readonly="True" type="long" name="startOffset" />
            <attribute readonly="True" type="Node" name="endContainer" />
            <attribute readonly="True" type="long" name="endOffset" />
            <attribute readonly="True" type="boolean" name="collapsed" />
            <attribute readonly="True" type="Node" name="commonAncestorContainer" />
          </attributes>
          <functions>
            <function returns="void" name="setStart">
              <params>
                <param optional="False" type="Node" name="refNode" />
                <param optional="False" type="long" name="offset" />
              </params>
              <raises>
                <exception name="RangeException" />
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="setEnd">
              <params>
                <param optional="False" type="Node" name="refNode" />
                <param optional="False" type="long" name="offset" />
              </params>
              <raises>
                <exception name="RangeException" />
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="setStartBefore">
              <params>
                <param optional="False" type="Node" name="refNode" />
              </params>
              <raises>
                <exception name="RangeException" />
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="setStartAfter">
              <params>
                <param optional="False" type="Node" name="refNode" />
              </params>
              <raises>
                <exception name="RangeException" />
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="setEndBefore">
              <params>
                <param optional="False" type="Node" name="refNode" />
              </params>
              <raises>
                <exception name="RangeException" />
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="setEndAfter">
              <params>
                <param optional="False" type="Node" name="refNode" />
              </params>
              <raises>
                <exception name="RangeException" />
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="collapse">
              <params>
                <param optional="False" type="boolean" name="toStart" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="selectNode">
              <params>
                <param optional="False" type="Node" name="refNode" />
              </params>
              <raises>
                <exception name="RangeException" />
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="selectNodeContents">
              <params>
                <param optional="False" type="Node" name="refNode" />
              </params>
              <raises>
                <exception name="RangeException" />
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="short" name="compareBoundaryPoints">
              <params>
                <param optional="False" type="unsigned short" name="how" />
                <param optional="False" type="Range" name="sourceRange" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteContents">
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DocumentFragment" name="extractContents">
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DocumentFragment" name="cloneContents">
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="insertNode">
              <params>
                <param optional="False" type="Node" name="newNode" />
              </params>
              <raises>
                <exception name="DOMException" />
                <exception name="RangeException" />
              </raises>
            </function>
            <function returns="void" name="surroundContents">
              <params>
                <param optional="False" type="Node" name="newParent" />
              </params>
              <raises>
                <exception name="DOMException" />
                <exception name="RangeException" />
              </raises>
            </function>
            <function returns="Range" name="cloneRange">
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DOMString" name="toString">
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="detach">
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
          <consts>
            <const type="unsigned short" name="START_TO_START" value="0" />
            <const type="unsigned short" name="START_TO_END" value="1" />
            <const type="unsigned short" name="END_TO_END" value="2" />
            <const type="unsigned short" name="END_TO_START" value="3" />
          </consts>
        </interface>
        <interface name="DocumentRange" extends="">
          <functions>
            <function returns="Range" name="createRange" />
          </functions>
        </interface>
        <interface name="NodeIterator" extends="">
          <attributes>
            <attribute readonly="True" type="Node" name="root" />
            <attribute readonly="True" type="unsigned long" name="whatToShow" />
            <attribute readonly="True" type="NodeFilter" name="filter" />
            <attribute readonly="True" type="boolean" name="expandEntityReferences" />
          </attributes>
          <functions>
            <function returns="Node" name="nextNode">
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="previousNode">
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="detach" />
          </functions>
        </interface>
        <interface name="NodeFilter" extends="">
          <consts>
            <const type="short" name="FILTER_ACCEPT" value="1" />
            <const type="short" name="FILTER_REJECT" value="2" />
            <const type="short" name="FILTER_SKIP" value="3" />
            <const type="unsigned long" name="SHOW_ALL" value="0xFFFFFFFF" />
            <const type="unsigned long" name="SHOW_ELEMENT" value="0x00000001" />
            <const type="unsigned long" name="SHOW_ATTRIBUTE" value="0x00000002" />
            <const type="unsigned long" name="SHOW_TEXT" value="0x00000004" />
            <const type="unsigned long" name="SHOW_CDATA_SECTION" value="0x00000008" />
            <const type="unsigned long" name="SHOW_ENTITY_REFERENCE" value="0x00000010" />
            <const type="unsigned long" name="SHOW_ENTITY" value="0x00000020" />
            <const type="unsigned long" name="SHOW_PROCESSING_INSTRUCTION" value="0x00000040" />
            <const type="unsigned long" name="SHOW_COMMENT" value="0x00000080" />
            <const type="unsigned long" name="SHOW_DOCUMENT" value="0x00000100" />
            <const type="unsigned long" name="SHOW_DOCUMENT_TYPE" value="0x00000200" />
            <const type="unsigned long" name="SHOW_DOCUMENT_FRAGMENT" value="0x00000400" />
            <const type="unsigned long" name="SHOW_NOTATION" value="0x00000800" />
          </consts>
          <functions>
            <function returns="short" name="acceptNode">
              <params>
                <param optional="False" type="Node" name="n" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="TreeWalker" extends="">
          <attributes>
            <attribute readonly="True" type="Node" name="root" />
            <attribute readonly="True" type="unsigned long" name="whatToShow" />
            <attribute readonly="True" type="NodeFilter" name="filter" />
            <attribute readonly="True" type="boolean" name="expandEntityReferences" />
            <attribute readonly="False" type="Node" name="currentNode" />
          </attributes>
          <functions>
            <function returns="Node" name="parentNode" />
            <function returns="Node" name="firstChild" />
            <function returns="Node" name="lastChild" />
            <function returns="Node" name="previousSibling" />
            <function returns="Node" name="nextSibling" />
            <function returns="Node" name="previousNode" />
            <function returns="Node" name="nextNode" />
          </functions>
        </interface>
        <interface name="DocumentTraversal" extends="">
          <functions>
            <function returns="NodeIterator" name="createNodeIterator">
              <params>
                <param optional="False" type="Node" name="root" />
                <param optional="False" type="unsigned long" name="whatToShow" />
                <param optional="False" type="NodeFilter" name="filter" />
                <param optional="False" type="boolean" name="entityReferenceExpansion" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="TreeWalker" name="createTreeWalker">
              <params>
                <param optional="False" type="Node" name="root" />
                <param optional="False" type="unsigned long" name="whatToShow" />
                <param optional="False" type="NodeFilter" name="filter" />
                <param optional="False" type="boolean" name="entityReferenceExpansion" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="HTMLCollection" extends="">
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="Node" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="Node" name="namedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="HTMLOptionsCollection" extends="">
          <attributes>
            <attribute readonly="False" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="Node" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="Node" name="namedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="HTMLDocument" extends="Document">
          <attributes>
            <attribute readonly="False" type="DOMString" name="title" />
            <attribute readonly="True" type="DOMString" name="referrer" />
            <attribute readonly="True" type="DOMString" name="domain" />
            <attribute readonly="True" type="DOMString" name="URL" />
            <attribute readonly="False" type="HTMLElement" name="body" />
            <attribute readonly="True" type="HTMLCollection" name="images" />
            <attribute readonly="True" type="HTMLCollection" name="applets" />
            <attribute readonly="True" type="HTMLCollection" name="links" />
            <attribute readonly="True" type="HTMLCollection" name="forms" />
            <attribute readonly="True" type="HTMLCollection" name="anchors" />
            <attribute readonly="False" type="DOMString" name="cookie" />
          </attributes>
          <functions>
            <function returns="void" name="open" />
            <function returns="void" name="close" />
            <function returns="void" name="write">
              <params>
                <param optional="False" type="DOMString" name="text" />
              </params>
            </function>
            <function returns="void" name="writeln">
              <params>
                <param optional="False" type="DOMString" name="text" />
              </params>
            </function>
            <function returns="NodeList" name="getElementsByName">
              <params>
                <param optional="False" type="DOMString" name="elementName" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="HTMLElement" extends="Element">
          <attributes>
            <attribute readonly="False" type="DOMString" name="id" />
            <attribute readonly="False" type="DOMString" name="title" />
            <attribute readonly="False" type="DOMString" name="lang" />
            <attribute readonly="False" type="DOMString" name="dir" />
            <attribute readonly="False" type="DOMString" name="className" />
          </attributes>
        </interface>
        <interface name="HTMLHtmlElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="version" />
          </attributes>
        </interface>
        <interface name="HTMLHeadElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="profile" />
          </attributes>
        </interface>
        <interface name="HTMLLinkElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="charset" />
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="DOMString" name="hreflang" />
            <attribute readonly="False" type="DOMString" name="media" />
            <attribute readonly="False" type="DOMString" name="rel" />
            <attribute readonly="False" type="DOMString" name="rev" />
            <attribute readonly="False" type="DOMString" name="target" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLTitleElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="text" />
          </attributes>
        </interface>
        <interface name="HTMLMetaElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="content" />
            <attribute readonly="False" type="DOMString" name="httpEquiv" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="scheme" />
          </attributes>
        </interface>
        <interface name="HTMLBaseElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="DOMString" name="target" />
          </attributes>
        </interface>
        <interface name="HTMLIsIndexElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="prompt" />
          </attributes>
        </interface>
        <interface name="HTMLStyleElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="media" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLBodyElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="aLink" />
            <attribute readonly="False" type="DOMString" name="background" />
            <attribute readonly="False" type="DOMString" name="bgColor" />
            <attribute readonly="False" type="DOMString" name="link" />
            <attribute readonly="False" type="DOMString" name="text" />
            <attribute readonly="False" type="DOMString" name="vLink" />
          </attributes>
        </interface>
        <interface name="HTMLFormElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLCollection" name="elements" />
            <attribute readonly="True" type="long" name="length" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="acceptCharset" />
            <attribute readonly="False" type="DOMString" name="action" />
            <attribute readonly="False" type="DOMString" name="enctype" />
            <attribute readonly="False" type="DOMString" name="method" />
            <attribute readonly="False" type="DOMString" name="target" />
          </attributes>
          <functions>
            <function returns="void" name="submit" />
            <function returns="void" name="reset" />
          </functions>
        </interface>
        <interface name="HTMLSelectElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="False" type="long" name="selectedIndex" />
            <attribute readonly="False" type="DOMString" name="value" />
            <attribute readonly="False" type="unsigned long" name="length" />
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="True" type="HTMLOptionsCollection" name="options" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="boolean" name="multiple" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="long" name="size" />
            <attribute readonly="False" type="long" name="tabIndex" />
          </attributes>
          <functions>
            <function returns="void" name="add">
              <params>
                <param optional="False" type="HTMLElement" name="element" />
                <param optional="False" type="HTMLElement" name="before" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="remove">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
            </function>
            <function returns="void" name="blur" />
            <function returns="void" name="focus" />
          </functions>
        </interface>
        <interface name="HTMLOptGroupElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="label" />
          </attributes>
        </interface>
        <interface name="HTMLOptionElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="boolean" name="defaultSelected" />
            <attribute readonly="True" type="DOMString" name="text" />
            <attribute readonly="True" type="long" name="index" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="label" />
            <attribute readonly="False" type="boolean" name="selected" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
        </interface>
        <interface name="HTMLInputElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="defaultValue" />
            <attribute readonly="False" type="boolean" name="defaultChecked" />
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accept" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="alt" />
            <attribute readonly="False" type="boolean" name="checked" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="long" name="maxLength" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="boolean" name="readOnly" />
            <attribute readonly="False" type="unsigned long" name="size" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="False" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="useMap" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
          <functions>
            <function returns="void" name="blur" />
            <function returns="void" name="focus" />
            <function returns="void" name="select" />
            <function returns="void" name="click" />
          </functions>
        </interface>
        <interface name="HTMLTextAreaElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="defaultValue" />
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="long" name="cols" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="boolean" name="readOnly" />
            <attribute readonly="False" type="long" name="rows" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
          <functions>
            <function returns="void" name="blur" />
            <function returns="void" name="focus" />
            <function returns="void" name="select" />
          </functions>
        </interface>
        <interface name="HTMLButtonElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="boolean" name="disabled" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="value" />
          </attributes>
        </interface>
        <interface name="HTMLLabelElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="htmlFor" />
          </attributes>
        </interface>
        <interface name="HTMLFieldSetElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
          </attributes>
        </interface>
        <interface name="HTMLLegendElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLUListElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLOListElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
            <attribute readonly="False" type="long" name="start" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLDListElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
          </attributes>
        </interface>
        <interface name="HTMLDirectoryElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
          </attributes>
        </interface>
        <interface name="HTMLMenuElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="boolean" name="compact" />
          </attributes>
        </interface>
        <interface name="HTMLLIElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="type" />
            <attribute readonly="False" type="long" name="value" />
          </attributes>
        </interface>
        <interface name="HTMLDivElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLParagraphElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLHeadingElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLQuoteElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="cite" />
          </attributes>
        </interface>
        <interface name="HTMLPreElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="long" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLBRElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="clear" />
          </attributes>
        </interface>
        <interface name="HTMLBaseFontElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="color" />
            <attribute readonly="False" type="DOMString" name="face" />
            <attribute readonly="False" type="long" name="size" />
          </attributes>
        </interface>
        <interface name="HTMLFontElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="color" />
            <attribute readonly="False" type="DOMString" name="face" />
            <attribute readonly="False" type="DOMString" name="size" />
          </attributes>
        </interface>
        <interface name="HTMLHRElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="boolean" name="noShade" />
            <attribute readonly="False" type="DOMString" name="size" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLModElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="cite" />
            <attribute readonly="False" type="DOMString" name="dateTime" />
          </attributes>
        </interface>
        <interface name="HTMLAnchorElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="charset" />
            <attribute readonly="False" type="DOMString" name="coords" />
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="DOMString" name="hreflang" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="rel" />
            <attribute readonly="False" type="DOMString" name="rev" />
            <attribute readonly="False" type="DOMString" name="shape" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="False" type="DOMString" name="target" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
          <functions>
            <function returns="void" name="blur" />
            <function returns="void" name="focus" />
          </functions>
        </interface>
        <interface name="HTMLImageElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="alt" />
            <attribute readonly="False" type="DOMString" name="border" />
            <attribute readonly="False" type="long" name="height" />
            <attribute readonly="False" type="long" name="hspace" />
            <attribute readonly="False" type="boolean" name="isMap" />
            <attribute readonly="False" type="DOMString" name="longDesc" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="False" type="DOMString" name="useMap" />
            <attribute readonly="False" type="long" name="vspace" />
            <attribute readonly="False" type="long" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLObjectElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLFormElement" name="form" />
            <attribute readonly="False" type="DOMString" name="code" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="archive" />
            <attribute readonly="False" type="DOMString" name="border" />
            <attribute readonly="False" type="DOMString" name="codeBase" />
            <attribute readonly="False" type="DOMString" name="codeType" />
            <attribute readonly="False" type="DOMString" name="data" />
            <attribute readonly="False" type="boolean" name="declare" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="long" name="hspace" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="standby" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="False" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="useMap" />
            <attribute readonly="False" type="long" name="vspace" />
            <attribute readonly="False" type="DOMString" name="width" />
            <attribute readonly="True" type="Document" name="contentDocument" />
          </attributes>
        </interface>
        <interface name="HTMLParamElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="type" />
            <attribute readonly="False" type="DOMString" name="value" />
            <attribute readonly="False" type="DOMString" name="valueType" />
          </attributes>
        </interface>
        <interface name="HTMLAppletElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="alt" />
            <attribute readonly="False" type="DOMString" name="archive" />
            <attribute readonly="False" type="DOMString" name="code" />
            <attribute readonly="False" type="DOMString" name="codeBase" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="long" name="hspace" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="object" />
            <attribute readonly="False" type="long" name="vspace" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLMapElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="HTMLCollection" name="areas" />
            <attribute readonly="False" type="DOMString" name="name" />
          </attributes>
        </interface>
        <interface name="HTMLAreaElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="accessKey" />
            <attribute readonly="False" type="DOMString" name="alt" />
            <attribute readonly="False" type="DOMString" name="coords" />
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="boolean" name="noHref" />
            <attribute readonly="False" type="DOMString" name="shape" />
            <attribute readonly="False" type="long" name="tabIndex" />
            <attribute readonly="False" type="DOMString" name="target" />
          </attributes>
        </interface>
        <interface name="HTMLScriptElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="text" />
            <attribute readonly="False" type="DOMString" name="htmlFor" />
            <attribute readonly="False" type="DOMString" name="event" />
            <attribute readonly="False" type="DOMString" name="charset" />
            <attribute readonly="False" type="boolean" name="defer" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="False" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="HTMLTableElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="HTMLTableCaptionElement" name="caption" />
            <attribute readonly="False" type="HTMLTableSectionElement" name="tHead" />
            <attribute readonly="False" type="HTMLTableSectionElement" name="tFoot" />
            <attribute readonly="True" type="HTMLCollection" name="rows" />
            <attribute readonly="True" type="HTMLCollection" name="tBodies" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="bgColor" />
            <attribute readonly="False" type="DOMString" name="border" />
            <attribute readonly="False" type="DOMString" name="cellPadding" />
            <attribute readonly="False" type="DOMString" name="cellSpacing" />
            <attribute readonly="False" type="DOMString" name="frame" />
            <attribute readonly="False" type="DOMString" name="rules" />
            <attribute readonly="False" type="DOMString" name="summary" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
          <functions>
            <function returns="HTMLElement" name="createTHead" />
            <function returns="void" name="deleteTHead" />
            <function returns="HTMLElement" name="createTFoot" />
            <function returns="void" name="deleteTFoot" />
            <function returns="HTMLElement" name="createCaption" />
            <function returns="void" name="deleteCaption" />
            <function returns="HTMLElement" name="insertRow">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteRow">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="HTMLTableCaptionElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
          </attributes>
        </interface>
        <interface name="HTMLTableColElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="ch" />
            <attribute readonly="False" type="DOMString" name="chOff" />
            <attribute readonly="False" type="long" name="span" />
            <attribute readonly="False" type="DOMString" name="vAlign" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLTableSectionElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="ch" />
            <attribute readonly="False" type="DOMString" name="chOff" />
            <attribute readonly="False" type="DOMString" name="vAlign" />
            <attribute readonly="True" type="HTMLCollection" name="rows" />
          </attributes>
          <functions>
            <function returns="HTMLElement" name="insertRow">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteRow">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="HTMLTableRowElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="long" name="rowIndex" />
            <attribute readonly="True" type="long" name="sectionRowIndex" />
            <attribute readonly="True" type="HTMLCollection" name="cells" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="bgColor" />
            <attribute readonly="False" type="DOMString" name="ch" />
            <attribute readonly="False" type="DOMString" name="chOff" />
            <attribute readonly="False" type="DOMString" name="vAlign" />
          </attributes>
          <functions>
            <function returns="HTMLElement" name="insertCell">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteCell">
              <params>
                <param optional="False" type="long" name="index" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="HTMLTableCellElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="True" type="long" name="cellIndex" />
            <attribute readonly="False" type="DOMString" name="abbr" />
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="axis" />
            <attribute readonly="False" type="DOMString" name="bgColor" />
            <attribute readonly="False" type="DOMString" name="ch" />
            <attribute readonly="False" type="DOMString" name="chOff" />
            <attribute readonly="False" type="long" name="colSpan" />
            <attribute readonly="False" type="DOMString" name="headers" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="boolean" name="noWrap" />
            <attribute readonly="False" type="long" name="rowSpan" />
            <attribute readonly="False" type="DOMString" name="scope" />
            <attribute readonly="False" type="DOMString" name="vAlign" />
            <attribute readonly="False" type="DOMString" name="width" />
          </attributes>
        </interface>
        <interface name="HTMLFrameSetElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="cols" />
            <attribute readonly="False" type="DOMString" name="rows" />
          </attributes>
        </interface>
        <interface name="HTMLFrameElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="frameBorder" />
            <attribute readonly="False" type="DOMString" name="longDesc" />
            <attribute readonly="False" type="DOMString" name="marginHeight" />
            <attribute readonly="False" type="DOMString" name="marginWidth" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="boolean" name="noResize" />
            <attribute readonly="False" type="DOMString" name="scrolling" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="True" type="Document" name="contentDocument" />
          </attributes>
        </interface>
        <interface name="HTMLIFrameElement" extends="HTMLElement">
          <attributes>
            <attribute readonly="False" type="DOMString" name="align" />
            <attribute readonly="False" type="DOMString" name="frameBorder" />
            <attribute readonly="False" type="DOMString" name="height" />
            <attribute readonly="False" type="DOMString" name="longDesc" />
            <attribute readonly="False" type="DOMString" name="marginHeight" />
            <attribute readonly="False" type="DOMString" name="marginWidth" />
            <attribute readonly="False" type="DOMString" name="name" />
            <attribute readonly="False" type="DOMString" name="scrolling" />
            <attribute readonly="False" type="DOMString" name="src" />
            <attribute readonly="False" type="DOMString" name="width" />
            <attribute readonly="True" type="Document" name="contentDocument" />
          </attributes>
        </interface>
      </interfaces>
    </module>
    <module name="DOM3" disabled="False">
      <interfaces>
        <interface name="DOMException" extends="">
          <functions>
            <function returns="unsigned short" name="code" />
          </functions>
          <consts>
            <const type="unsigned short" name="INDEX_SIZE_ERR" value="1" />
            <const type="unsigned short" name="DOMSTRING_SIZE_ERR" value="2" />
            <const type="unsigned short" name="HIERARCHY_REQUEST_ERR" value="3" />
            <const type="unsigned short" name="WRONG_DOCUMENT_ERR" value="4" />
            <const type="unsigned short" name="INVALID_CHARACTER_ERR" value="5" />
            <const type="unsigned short" name="NO_DATA_ALLOWED_ERR" value="6" />
            <const type="unsigned short" name="NO_MODIFICATION_ALLOWED_ERR" value="7" />
            <const type="unsigned short" name="NOT_FOUND_ERR" value="8" />
            <const type="unsigned short" name="NOT_SUPPORTED_ERR" value="9" />
            <const type="unsigned short" name="INUSE_ATTRIBUTE_ERR" value="10" />
            <const type="unsigned short" name="INVALID_STATE_ERR" value="11" />
            <const type="unsigned short" name="SYNTAX_ERR" value="12" />
            <const type="unsigned short" name="INVALID_MODIFICATION_ERR" value="13" />
            <const type="unsigned short" name="NAMESPACE_ERR" value="14" />
            <const type="unsigned short" name="INVALID_ACCESS_ERR" value="15" />
            <const type="unsigned short" name="VALIDATION_ERR" value="16" />
            <const type="unsigned short" name="TYPE_MISMATCH_ERR" value="17" />
          </consts>
        </interface>
        <interface name="DOMStringList" extends="">
          <functions>
            <function returns="DOMString" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="boolean" name="contains">
              <params>
                <param optional="False" type="DOMString" name="str" />
              </params>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
        </interface>
        <interface name="NameList" extends="">
          <functions>
            <function returns="DOMString" name="getName">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="DOMString" name="getNamespaceURI">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="boolean" name="contains">
              <params>
                <param optional="False" type="DOMString" name="str" />
              </params>
            </function>
            <function returns="boolean" name="containsNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
        </interface>
        <interface name="DOMImplementationList" extends="">
          <functions>
            <function returns="DOMImplementation" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
        </interface>
        <interface name="DOMImplementationSource" extends="">
          <functions>
            <function returns="DOMImplementation" name="getDOMImplementation">
              <params>
                <param optional="False" type="DOMString" name="features" />
              </params>
            </function>
            <function returns="DOMImplementationList" name="getDOMImplementationList">
              <params>
                <param optional="False" type="DOMString" name="features" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="DOMImplementation" extends="">
          <functions>
            <function returns="boolean" name="hasFeature">
              <params>
                <param optional="False" type="DOMString" name="feature" />
                <param optional="False" type="DOMString" name="version" />
              </params>
            </function>
            <function returns="DocumentType" name="createDocumentType">
              <params>
                <param optional="False" type="DOMString" name="qualifiedName" />
                <param optional="False" type="DOMString" name="publicId" />
                <param optional="False" type="DOMString" name="systemId" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Document" name="createDocument">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="qualifiedName" />
                <param optional="False" type="DocumentType" name="doctype" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DOMObject" name="getFeature">
              <params>
                <param optional="False" type="DOMString" name="feature" />
                <param optional="False" type="DOMString" name="version" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="Node" extends="">
          <consts>
            <const type="unsigned short" name="ELEMENT_NODE" value="1" />
            <const type="unsigned short" name="ATTRIBUTE_NODE" value="2" />
            <const type="unsigned short" name="TEXT_NODE" value="3" />
            <const type="unsigned short" name="CDATA_SECTION_NODE" value="4" />
            <const type="unsigned short" name="ENTITY_REFERENCE_NODE" value="5" />
            <const type="unsigned short" name="ENTITY_NODE" value="6" />
            <const type="unsigned short" name="PROCESSING_INSTRUCTION_NODE" value="7" />
            <const type="unsigned short" name="COMMENT_NODE" value="8" />
            <const type="unsigned short" name="DOCUMENT_NODE" value="9" />
            <const type="unsigned short" name="DOCUMENT_TYPE_NODE" value="10" />
            <const type="unsigned short" name="DOCUMENT_FRAGMENT_NODE" value="11" />
            <const type="unsigned short" name="NOTATION_NODE" value="12" />
            <const type="unsigned short" name="DOCUMENT_POSITION_DISCONNECTED" value="0x01" />
            <const type="unsigned short" name="DOCUMENT_POSITION_PRECEDING" value="0x02" />
            <const type="unsigned short" name="DOCUMENT_POSITION_FOLLOWING" value="0x04" />
            <const type="unsigned short" name="DOCUMENT_POSITION_CONTAINS" value="0x08" />
            <const type="unsigned short" name="DOCUMENT_POSITION_CONTAINED_BY" value="0x10" />
            <const type="unsigned short" name="DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC" value="0x20" />
          </consts>
          <attributes>
            <attribute readonly="True" type="DOMString" name="nodeName" />
            <attribute readonly="False" type="DOMString" name="nodeValue" />
            <attribute readonly="True" type="unsigned short" name="nodeType" />
            <attribute readonly="True" type="Node" name="parentNode" />
            <attribute readonly="True" type="NodeList" name="childNodes" />
            <attribute readonly="True" type="Node" name="firstChild" />
            <attribute readonly="True" type="Node" name="lastChild" />
            <attribute readonly="True" type="Node" name="previousSibling" />
            <attribute readonly="True" type="Node" name="nextSibling" />
            <attribute readonly="True" type="NamedNodeMap" name="attributes" />
            <attribute readonly="True" type="Document" name="ownerDocument" />
            <attribute readonly="True" type="DOMString" name="namespaceURI" />
            <attribute readonly="False" type="DOMString" name="prefix" />
            <attribute readonly="True" type="DOMString" name="localName" />
            <attribute readonly="True" type="DOMString" name="baseURI" />
            <attribute readonly="False" type="DOMString" name="textContent" />
          </attributes>
          <functions>
            <function returns="Node" name="insertBefore">
              <params>
                <param optional="False" type="Node" name="newChild" />
                <param optional="False" type="Node" name="refChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="replaceChild">
              <params>
                <param optional="False" type="Node" name="newChild" />
                <param optional="False" type="Node" name="oldChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="removeChild">
              <params>
                <param optional="False" type="Node" name="oldChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="appendChild">
              <params>
                <param optional="False" type="Node" name="newChild" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="boolean" name="hasChildNodes" />
            <function returns="Node" name="cloneNode">
              <params>
                <param optional="False" type="boolean" name="deep" />
              </params>
            </function>
            <function returns="void" name="normalize" />
            <function returns="boolean" name="isSupported">
              <params>
                <param optional="False" type="DOMString" name="feature" />
                <param optional="False" type="DOMString" name="version" />
              </params>
            </function>
            <function returns="boolean" name="hasAttributes" />
            <function returns="unsigned short" name="compareDocumentPosition">
              <params>
                <param optional="False" type="Node" name="other" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="boolean" name="isSameNode">
              <params>
                <param optional="False" type="Node" name="other" />
              </params>
            </function>
            <function returns="DOMString" name="lookupPrefix">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
              </params>
            </function>
            <function returns="boolean" name="isDefaultNamespace">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
              </params>
            </function>
            <function returns="DOMString" name="lookupNamespaceURI">
              <params>
                <param optional="False" type="DOMString" name="prefix" />
              </params>
            </function>
            <function returns="boolean" name="isEqualNode">
              <params>
                <param optional="False" type="Node" name="arg" />
              </params>
            </function>
            <function returns="DOMObject" name="getFeature">
              <params>
                <param optional="False" type="DOMString" name="feature" />
                <param optional="False" type="DOMString" name="version" />
              </params>
            </function>
            <function returns="DOMUserData" name="setUserData">
              <params>
                <param optional="False" type="DOMString" name="key" />
                <param optional="False" type="DOMUserData" name="data" />
                <param optional="False" type="UserDataHandler" name="handler" />
              </params>
            </function>
            <function returns="DOMUserData" name="getUserData">
              <params>
                <param optional="False" type="DOMString" name="key" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="NodeList" extends="">
          <functions>
            <function returns="Node" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
        </interface>
        <interface name="NamedNodeMap" extends="">
          <functions>
            <function returns="Node" name="getNamedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="Node" name="setNamedItem">
              <params>
                <param optional="False" type="Node" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="removeNamedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="Node" name="getNamedItemNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="setNamedItemNS">
              <params>
                <param optional="False" type="Node" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="removeNamedItemNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
        </interface>
        <interface name="CharacterData" extends="Node">
          <attributes>
            <attribute readonly="False" type="DOMString" name="data" />
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="DOMString" name="substringData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="appendData">
              <params>
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="insertData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="deleteData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="replaceData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="Attr" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="boolean" name="specified" />
            <attribute readonly="False" type="DOMString" name="value" />
            <attribute readonly="True" type="Element" name="ownerElement" />
            <attribute readonly="True" type="TypeInfo" name="schemaTypeInfo" />
            <attribute readonly="True" type="boolean" name="isId" />
          </attributes>
        </interface>
        <interface name="Element" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="tagName" />
            <attribute readonly="True" type="TypeInfo" name="schemaTypeInfo" />
          </attributes>
          <functions>
            <function returns="DOMString" name="getAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="void" name="setAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="DOMString" name="value" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="removeAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="getAttributeNode">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="Attr" name="setAttributeNode">
              <params>
                <param optional="False" type="Attr" name="newAttr" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="removeAttributeNode">
              <params>
                <param optional="False" type="Attr" name="oldAttr" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="NodeList" name="getElementsByTagName">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="DOMString" name="getAttributeNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="setAttributeNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="qualifiedName" />
                <param optional="False" type="DOMString" name="value" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="removeAttributeNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="getAttributeNodeNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="setAttributeNodeNS">
              <params>
                <param optional="False" type="Attr" name="newAttr" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="NodeList" name="getElementsByTagNameNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="boolean" name="hasAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="boolean" name="hasAttributeNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="setIdAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="boolean" name="isId" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="setIdAttributeNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
                <param optional="False" type="boolean" name="isId" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="setIdAttributeNode">
              <params>
                <param optional="False" type="Attr" name="idAttr" />
                <param optional="False" type="boolean" name="isId" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="Text" extends="CharacterData">
          <functions>
            <function returns="Text" name="splitText">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Text" name="replaceWholeText">
              <params>
                <param optional="False" type="DOMString" name="content" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="boolean" name="isElementContentWhitespace" />
            <attribute readonly="True" type="DOMString" name="wholeText" />
          </attributes>
        </interface>
        <interface name="Comment" extends="CharacterData" />
        <interface name="TypeInfo" extends="">
          <attributes>
            <attribute readonly="True" type="DOMString" name="typeName" />
            <attribute readonly="True" type="DOMString" name="typeNamespace" />
          </attributes>
          <consts>
            <const type="unsigned long" name="DERIVATION_RESTRICTION" value="0x00000001" />
            <const type="unsigned long" name="DERIVATION_EXTENSION" value="0x00000002" />
            <const type="unsigned long" name="DERIVATION_UNION" value="0x00000004" />
            <const type="unsigned long" name="DERIVATION_LIST" value="0x00000008" />
          </consts>
          <functions>
            <function returns="boolean" name="isDerivedFrom">
              <params>
                <param optional="False" type="DOMString" name="typeNamespaceArg" />
                <param optional="False" type="DOMString" name="typeNameArg" />
                <param optional="False" type="unsigned long" name="derivationMethod" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="UserDataHandler" extends="">
          <consts>
            <const type="unsigned short" name="NODE_CLONED" value="1" />
            <const type="unsigned short" name="NODE_IMPORTED" value="2" />
            <const type="unsigned short" name="NODE_DELETED" value="3" />
            <const type="unsigned short" name="NODE_RENAMED" value="4" />
            <const type="unsigned short" name="NODE_ADOPTED" value="5" />
          </consts>
          <functions>
            <function returns="void" name="handle">
              <params>
                <param optional="False" type="unsigned short" name="operation" />
                <param optional="False" type="DOMString" name="key" />
                <param optional="False" type="DOMUserData" name="data" />
                <param optional="False" type="Node" name="src" />
                <param optional="False" type="Node" name="dst" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="DOMError" extends="">
          <consts>
            <const type="unsigned short" name="SEVERITY_WARNING" value="1" />
            <const type="unsigned short" name="SEVERITY_ERROR" value="2" />
            <const type="unsigned short" name="SEVERITY_FATAL_ERROR" value="3" />
          </consts>
          <attributes>
            <attribute readonly="True" type="unsigned short" name="severity" />
            <attribute readonly="True" type="DOMString" name="message" />
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="True" type="DOMObject" name="relatedException" />
            <attribute readonly="True" type="DOMObject" name="relatedData" />
            <attribute readonly="True" type="DOMLocator" name="location" />
          </attributes>
        </interface>
        <interface name="DOMErrorHandler" extends="">
          <functions>
            <function returns="boolean" name="handleError">
              <params>
                <param optional="False" type="DOMError" name="error" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="DOMLocator" extends="">
          <attributes>
            <attribute readonly="True" type="long" name="lineNumber" />
            <attribute readonly="True" type="long" name="columnNumber" />
            <attribute readonly="True" type="long" name="byteOffset" />
            <attribute readonly="True" type="long" name="utf16Offset" />
            <attribute readonly="True" type="Node" name="relatedNode" />
            <attribute readonly="True" type="DOMString" name="uri" />
          </attributes>
        </interface>
        <interface name="DOMConfiguration" extends="">
          <functions>
            <function returns="void" name="setParameter">
              <params>
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="DOMUserData" name="value" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DOMUserData" name="getParameter">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="boolean" name="canSetParameter">
              <params>
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="DOMUserData" name="value" />
              </params>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="DOMStringList" name="parameterNames" />
          </attributes>
        </interface>
        <interface name="CDATASection" extends="Text" />
        <interface name="DocumentType" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="NamedNodeMap" name="entities" />
            <attribute readonly="True" type="NamedNodeMap" name="notations" />
            <attribute readonly="True" type="DOMString" name="publicId" />
            <attribute readonly="True" type="DOMString" name="systemId" />
            <attribute readonly="True" type="DOMString" name="internalSubset" />
          </attributes>
        </interface>
        <interface name="Notation" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="publicId" />
            <attribute readonly="True" type="DOMString" name="systemId" />
          </attributes>
        </interface>
        <interface name="Entity" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="publicId" />
            <attribute readonly="True" type="DOMString" name="systemId" />
            <attribute readonly="True" type="DOMString" name="notationName" />
            <attribute readonly="True" type="DOMString" name="inputEncoding" />
            <attribute readonly="True" type="DOMString" name="xmlEncoding" />
            <attribute readonly="True" type="DOMString" name="xmlVersion" />
          </attributes>
        </interface>
        <interface name="EntityReference" extends="Node" />
        <interface name="ProcessingInstruction" extends="Node">
          <attributes>
            <attribute readonly="True" type="DOMString" name="target" />
            <attribute readonly="False" type="DOMString" name="data" />
          </attributes>
        </interface>
        <interface name="DocumentFragment" extends="Node" />
        <interface name="Document" extends="Node">
          <attributes>
            <attribute readonly="True" type="DocumentType" name="doctype" />
            <attribute readonly="True" type="DOMImplementation" name="implementation" />
            <attribute readonly="True" type="Element" name="documentElement" />
            <attribute readonly="True" type="DOMString" name="inputEncoding" />
            <attribute readonly="True" type="DOMString" name="xmlEncoding" />
            <attribute readonly="False" type="boolean" name="xmlStandalone" />
            <attribute readonly="False" type="DOMString" name="xmlVersion" />
            <attribute readonly="False" type="boolean" name="strictErrorChecking" />
            <attribute readonly="False" type="DOMString" name="documentURI" />
            <attribute readonly="True" type="DOMConfiguration" name="domConfig" />
          </attributes>
          <functions>
            <function returns="Element" name="createElement">
              <params>
                <param optional="False" type="DOMString" name="tagName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DocumentFragment" name="createDocumentFragment" />
            <function returns="Text" name="createTextNode">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
            </function>
            <function returns="Comment" name="createComment">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
            </function>
            <function returns="CDATASection" name="createCDATASection">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="ProcessingInstruction" name="createProcessingInstruction">
              <params>
                <param optional="False" type="DOMString" name="target" />
                <param optional="False" type="DOMString" name="data" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="createAttribute">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="EntityReference" name="createEntityReference">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="NodeList" name="getElementsByTagName">
              <params>
                <param optional="False" type="DOMString" name="tagname" />
              </params>
            </function>
            <function returns="Node" name="importNode">
              <params>
                <param optional="False" type="Node" name="importedNode" />
                <param optional="False" type="boolean" name="deep" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Element" name="createElementNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="qualifiedName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Attr" name="createAttributeNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="qualifiedName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="NodeList" name="getElementsByTagNameNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
            </function>
            <function returns="Element" name="getElementById">
              <params>
                <param optional="False" type="DOMString" name="elementId" />
              </params>
            </function>
            <function returns="Node" name="adoptNode">
              <params>
                <param optional="False" type="Node" name="source" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="normalizeDocument" />
            <function returns="Node" name="renameNode">
              <params>
                <param optional="False" type="Node" name="n" />
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="qualifiedName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="LSException" extends="">
          <functions>
            <function returns="unsigned short" name="code" />
          </functions>
          <consts>
            <const type="unsigned short" name="PARSE_ERR" value="81" />
            <const type="unsigned short" name="SERIALIZE_ERR" value="82" />
          </consts>
        </interface>
        <interface name="DOMImplementationLS" extends="">
          <consts>
            <const type="unsigned short" name="MODE_SYNCHRONOUS" value="1" />
            <const type="unsigned short" name="MODE_ASYNCHRONOUS" value="2" />
          </consts>
          <functions>
            <function returns="LSParser" name="createLSParser">
              <params>
                <param optional="False" type="unsigned short" name="mode" />
                <param optional="False" type="DOMString" name="schemaType" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="LSSerializer" name="createLSSerializer" />
            <function returns="LSInput" name="createLSInput" />
            <function returns="LSOutput" name="createLSOutput" />
          </functions>
        </interface>
        <interface name="LSParser" extends="">
          <attributes>
            <attribute readonly="True" type="DOMConfiguration" name="domConfig" />
            <attribute readonly="False" type="LSParserFilter" name="filter" />
            <attribute readonly="True" type="boolean" name="async" />
            <attribute readonly="True" type="boolean" name="busy" />
          </attributes>
          <functions>
            <function returns="Document" name="parse">
              <params>
                <param optional="False" type="LSInput" name="input" />
              </params>
              <raises>
                <exception name="DOMException" />
                <exception name="LSException" />
              </raises>
            </function>
            <function returns="Document" name="parseURI">
              <params>
                <param optional="False" type="DOMString" name="uri" />
              </params>
              <raises>
                <exception name="DOMException" />
                <exception name="LSException" />
              </raises>
            </function>
            <function returns="Node" name="parseWithContext">
              <params>
                <param optional="False" type="LSInput" name="input" />
                <param optional="False" type="Node" name="contextArg" />
                <param optional="False" type="unsigned short" name="action" />
              </params>
              <raises>
                <exception name="DOMException" />
                <exception name="LSException" />
              </raises>
            </function>
            <function returns="void" name="abort" />
          </functions>
          <consts>
            <const type="unsigned short" name="ACTION_APPEND_AS_CHILDREN" value="1" />
            <const type="unsigned short" name="ACTION_REPLACE_CHILDREN" value="2" />
            <const type="unsigned short" name="ACTION_INSERT_BEFORE" value="3" />
            <const type="unsigned short" name="ACTION_INSERT_AFTER" value="4" />
            <const type="unsigned short" name="ACTION_REPLACE" value="5" />
          </consts>
        </interface>
        <interface name="LSInput" extends="">
          <attributes>
            <attribute readonly="False" type="LSReader" name="characterStream" />
            <attribute readonly="False" type="LSInputStream" name="byteStream" />
            <attribute readonly="False" type="DOMString" name="stringData" />
            <attribute readonly="False" type="DOMString" name="systemId" />
            <attribute readonly="False" type="DOMString" name="publicId" />
            <attribute readonly="False" type="DOMString" name="baseURI" />
            <attribute readonly="False" type="DOMString" name="encoding" />
            <attribute readonly="False" type="boolean" name="certifiedText" />
          </attributes>
        </interface>
        <interface name="LSResourceResolver" extends="">
          <functions>
            <function returns="LSInput" name="resolveResource">
              <params>
                <param optional="False" type="DOMString" name="type" />
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="publicId" />
                <param optional="False" type="DOMString" name="systemId" />
                <param optional="False" type="DOMString" name="baseURI" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="LSParserFilter" extends="">
          <consts>
            <const type="short" name="FILTER_ACCEPT" value="1" />
            <const type="short" name="FILTER_REJECT" value="2" />
            <const type="short" name="FILTER_SKIP" value="3" />
            <const type="short" name="FILTER_INTERRUPT" value="4" />
          </consts>
          <functions>
            <function returns="unsigned short" name="startElement">
              <params>
                <param optional="False" type="Element" name="elementArg" />
              </params>
            </function>
            <function returns="unsigned short" name="acceptNode">
              <params>
                <param optional="False" type="Node" name="nodeArg" />
              </params>
            </function>
          </functions>
          <attributes>
            <attribute readonly="True" type="unsigned long" name="whatToShow" />
          </attributes>
        </interface>
        <interface name="LSSerializer" extends="">
          <attributes>
            <attribute readonly="True" type="DOMConfiguration" name="domConfig" />
            <attribute readonly="False" type="DOMString" name="newLine" />
            <attribute readonly="False" type="LSSerializerFilter" name="filter" />
          </attributes>
          <functions>
            <function returns="boolean" name="write">
              <params>
                <param optional="False" type="Node" name="nodeArg" />
                <param optional="False" type="LSOutput" name="destination" />
              </params>
              <raises>
                <exception name="LSException" />
              </raises>
            </function>
            <function returns="boolean" name="writeToURI">
              <params>
                <param optional="False" type="Node" name="nodeArg" />
                <param optional="False" type="DOMString" name="uri" />
              </params>
              <raises>
                <exception name="LSException" />
              </raises>
            </function>
            <function returns="DOMString" name="writeToString">
              <params>
                <param optional="False" type="Node" name="nodeArg" />
              </params>
              <raises>
                <exception name="DOMException" />
                <exception name="LSException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="LSOutput" extends="">
          <attributes>
            <attribute readonly="False" type="LSWriter" name="characterStream" />
            <attribute readonly="False" type="LSOutputStream" name="byteStream" />
            <attribute readonly="False" type="DOMString" name="systemId" />
            <attribute readonly="False" type="DOMString" name="encoding" />
          </attributes>
        </interface>
        <interface name="LSProgressEvent" extends="Event">
          <attributes>
            <attribute readonly="True" type="LSInput" name="input" />
            <attribute readonly="True" type="unsigned long" name="position" />
            <attribute readonly="True" type="unsigned long" name="totalSize" />
          </attributes>
        </interface>
        <interface name="LSLoadEvent" extends="Event">
          <attributes>
            <attribute readonly="True" type="Document" name="newDocument" />
            <attribute readonly="True" type="LSInput" name="input" />
          </attributes>
        </interface>
        <interface name="LSSerializerFilter" extends="NodeFilter">
          <attributes>
            <attribute readonly="True" type="unsigned long" name="whatToShow" />
          </attributes>
        </interface>
        <interface name="ExceptionVAL" extends="">
          <functions>
            <function returns="unsigned short" name="code" />
          </functions>
          <consts>
            <const type="unsigned short" name="NO_SCHEMA_AVAILABLE_ERR" value="71" />
          </consts>
        </interface>
        <interface name="NodeEditVAL" extends="">
          <consts>
            <const type="unsigned short" name="VAL_WF" value="1" />
            <const type="unsigned short" name="VAL_NS_WF" value="2" />
            <const type="unsigned short" name="VAL_INCOMPLETE" value="3" />
            <const type="unsigned short" name="VAL_SCHEMA" value="4" />
            <const type="unsigned short" name="VAL_TRUE" value="5" />
            <const type="unsigned short" name="VAL_FALSE" value="6" />
            <const type="unsigned short" name="VAL_UNKNOWN" value="7" />
          </consts>
          <attributes>
            <attribute readonly="True" type="DOMString" name="defaultValue" />
            <attribute readonly="True" type="DOMStringList" name="enumeratedValues" />
          </attributes>
          <functions>
            <function returns="unsigned short" name="canInsertBefore">
              <params>
                <param optional="False" type="Node" name="newChild" />
                <param optional="False" type="Node" name="refChild" />
              </params>
            </function>
            <function returns="unsigned short" name="canRemoveChild">
              <params>
                <param optional="False" type="Node" name="oldChild" />
              </params>
            </function>
            <function returns="unsigned short" name="canReplaceChild">
              <params>
                <param optional="False" type="Node" name="newChild" />
                <param optional="False" type="Node" name="oldChild" />
              </params>
            </function>
            <function returns="unsigned short" name="canAppendChild">
              <params>
                <param optional="False" type="Node" name="newChild" />
              </params>
            </function>
            <function returns="unsigned short" name="nodeValidity">
              <params>
                <param optional="False" type="unsigned short" name="valType" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="ElementEditVAL" extends="NodeEditVAL">
          <consts>
            <const type="unsigned short" name="VAL_EMPTY_CONTENTTYPE" value="1" />
            <const type="unsigned short" name="VAL_ANY_CONTENTTYPE" value="2" />
            <const type="unsigned short" name="VAL_MIXED_CONTENTTYPE" value="3" />
            <const type="unsigned short" name="VAL_ELEMENTS_CONTENTTYPE" value="4" />
            <const type="unsigned short" name="VAL_SIMPLE_CONTENTTYPE" value="5" />
          </consts>
          <attributes>
            <attribute readonly="True" type="NameList" name="allowedChildren" />
            <attribute readonly="True" type="NameList" name="allowedFirstChildren" />
            <attribute readonly="True" type="NameList" name="allowedParents" />
            <attribute readonly="True" type="NameList" name="allowedNextSiblings" />
            <attribute readonly="True" type="NameList" name="allowedPreviousSiblings" />
            <attribute readonly="True" type="NameList" name="allowedAttributes" />
            <attribute readonly="True" type="NameList" name="requiredAttributes" />
            <attribute readonly="True" type="unsigned short" name="contentType" />
          </attributes>
          <functions>
            <function returns="unsigned short" name="canSetTextContent">
              <params>
                <param optional="False" type="DOMString" name="possibleTextContent" />
              </params>
            </function>
            <function returns="unsigned short" name="canSetAttribute">
              <params>
                <param optional="False" type="DOMString" name="attrname" />
                <param optional="False" type="DOMString" name="attrval" />
              </params>
            </function>
            <function returns="unsigned short" name="canSetAttributeNode">
              <params>
                <param optional="False" type="Attr" name="attrNode" />
              </params>
            </function>
            <function returns="unsigned short" name="canSetAttributeNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="qualifiedName" />
                <param optional="False" type="DOMString" name="value" />
              </params>
            </function>
            <function returns="unsigned short" name="canRemoveAttribute">
              <params>
                <param optional="False" type="DOMString" name="attrname" />
              </params>
            </function>
            <function returns="unsigned short" name="canRemoveAttributeNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
            </function>
            <function returns="unsigned short" name="canRemoveAttributeNode">
              <params>
                <param optional="False" type="Node" name="attrNode" />
              </params>
            </function>
            <function returns="unsigned short" name="isElementDefined">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="unsigned short" name="isElementDefinedNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="CharacterDataEditVAL" extends="NodeEditVAL">
          <functions>
            <function returns="unsigned short" name="isWhitespaceOnly" />
            <function returns="unsigned short" name="canSetData">
              <params>
                <param optional="False" type="DOMString" name="arg" />
              </params>
            </function>
            <function returns="unsigned short" name="canAppendData">
              <params>
                <param optional="False" type="DOMString" name="arg" />
              </params>
            </function>
            <function returns="unsigned short" name="canReplaceData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="unsigned short" name="canInsertData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="DOMString" name="arg" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="unsigned short" name="canDeleteData">
              <params>
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="unsigned long" name="count" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="DocumentEditVAL" extends="NodeEditVAL">
          <attributes>
            <attribute readonly="False" type="boolean" name="continuousValidityChecking" />
            <attribute readonly="True" type="DOMConfiguration" name="domConfig" />
          </attributes>
          <functions>
            <function returns="NameList" name="getDefinedElements">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
              </params>
            </function>
            <function returns="unsigned short" name="validateDocument" />
          </functions>
        </interface>
        <interface name="XPathException" extends="">
          <functions>
            <function returns="unsigned short" name="code" />
          </functions>
          <consts>
            <const type="unsigned short" name="INVALID_EXPRESSION_ERR" value="51" />
            <const type="unsigned short" name="TYPE_ERR" value="52" />
          </consts>
        </interface>
        <interface name="XPathEvaluator" extends="">
          <functions>
            <function returns="XPathExpression" name="createExpression">
              <params>
                <param optional="False" type="DOMString" name="expression" />
                <param optional="False" type="XPathNSResolver" name="resolver" />
              </params>
              <raises>
                <exception name="XPathException" />
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="XPathNSResolver" name="createNSResolver">
              <params>
                <param optional="False" type="Node" name="nodeResolver" />
              </params>
            </function>
            <function returns="DOMObject" name="evaluate">
              <params>
                <param optional="False" type="DOMString" name="expression" />
                <param optional="False" type="Node" name="contextNode" />
                <param optional="False" type="XPathNSResolver" name="resolver" />
                <param optional="False" type="unsigned short" name="type" />
                <param optional="False" type="DOMObject" name="result" />
              </params>
              <raises>
                <exception name="XPathException" />
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="XPathExpression" extends="">
          <functions>
            <function returns="DOMObject" name="evaluate">
              <params>
                <param optional="False" type="Node" name="contextNode" />
                <param optional="False" type="unsigned short" name="type" />
                <param optional="False" type="DOMObject" name="result" />
              </params>
              <raises>
                <exception name="XPathException" />
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="XPathNSResolver" extends="">
          <functions>
            <function returns="DOMString" name="lookupNamespaceURI">
              <params>
                <param optional="False" type="DOMString" name="prefix" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="XPathResult" extends="">
          <consts>
            <const type="unsigned short" name="ANY_TYPE" value="0" />
            <const type="unsigned short" name="NUMBER_TYPE" value="1" />
            <const type="unsigned short" name="STRING_TYPE" value="2" />
            <const type="unsigned short" name="BOOLEAN_TYPE" value="3" />
            <const type="unsigned short" name="UNORDERED_NODE_ITERATOR_TYPE" value="4" />
            <const type="unsigned short" name="ORDERED_NODE_ITERATOR_TYPE" value="5" />
            <const type="unsigned short" name="UNORDERED_NODE_SNAPSHOT_TYPE" value="6" />
            <const type="unsigned short" name="ORDERED_NODE_SNAPSHOT_TYPE" value="7" />
            <const type="unsigned short" name="ANY_UNORDERED_NODE_TYPE" value="8" />
            <const type="unsigned short" name="FIRST_ORDERED_NODE_TYPE" value="9" />
          </consts>
          <attributes>
            <attribute readonly="True" type="unsigned short" name="resultType" />
            <attribute readonly="True" type="double" name="numberValue" />
            <attribute readonly="True" type="DOMString" name="stringValue" />
            <attribute readonly="True" type="boolean" name="booleanValue" />
            <attribute readonly="True" type="Node" name="singleNodeValue" />
            <attribute readonly="True" type="boolean" name="invalidIteratorState" />
            <attribute readonly="True" type="unsigned long" name="snapshotLength" />
          </attributes>
          <functions>
            <function returns="Node" name="iterateNext">
              <raises>
                <exception name="XPathException" />
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="snapshotItem">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
              <raises>
                <exception name="XPathException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="XPathNamespace" extends="Node">
          <consts>
            <const type="unsigned short" name="XPATH_NAMESPACE_NODE" value="13" />
          </consts>
          <attributes>
            <attribute readonly="True" type="Element" name="ownerElement" />
          </attributes>
        </interface>
        <interface name="View" extends="">
          <functions>
            <function returns="void" name="select">
              <params>
                <param optional="False" type="Node" name="boundary" />
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="boolean" name="extend" />
                <param optional="False" type="boolean" name="add" />
              </params>
            </function>
            <function returns="Segment" name="createSegment" />
            <function returns="boolean" name="matchFirstSegment">
              <params>
                <param optional="False" type="Segment" name="todo" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="long" name="getIntegerProperty">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="DOMString" name="getStringProperty">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="boolean" name="getBooleanProperty">
              <params>
                <param optional="False" type="boolean" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="Node" name="getContentPropertyNode">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="unsigned long" name="getContentPropertyOffset">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="Match" extends="">
          <consts>
            <const type="unsigned short" name="IS_EQUAL" value="0" />
            <const type="unsigned short" name="IS_NOT_EQUAL" value="1" />
            <const type="unsigned short" name="INT_PRECEDES" value="2" />
            <const type="unsigned short" name="INT_PRECEDES_OR_EQUALS" value="3" />
            <const type="unsigned short" name="INT_FOLLOWS" value="4" />
            <const type="unsigned short" name="INT_FOLLOWS_OR_EQUALS" value="5" />
            <const type="unsigned short" name="STR_STARTS_WITH" value="6" />
            <const type="unsigned short" name="STR_ENDS_WITH" value="7" />
            <const type="unsigned short" name="STR_CONTAINS" value="8" />
            <const type="unsigned short" name="SET_ANY" value="9" />
            <const type="unsigned short" name="SET_ALL" value="10" />
            <const type="unsigned short" name="SET_NOT_ANY" value="11" />
            <const type="unsigned short" name="SET_NOT_ALL" value="12" />
          </consts>
          <attributes>
            <attribute readonly="True" type="unsigned short" name="test" />
          </attributes>
        </interface>
        <interface name="MatchString" extends="Match">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="DOMString" name="value" />
          </attributes>
        </interface>
        <interface name="MatchInteger" extends="Match">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="long" name="value" />
          </attributes>
        </interface>
        <interface name="MatchBoolean" extends="Match">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="boolean" name="value" />
          </attributes>
        </interface>
        <interface name="MatchContent" extends="Match">
          <attributes>
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="Node" name="nodeArg" />
            <attribute readonly="True" type="unsigned long" name="offset" />
          </attributes>
        </interface>
        <interface name="MatchSet" extends="Match">
          <attributes>
            <attribute readonly="True" type="Node" name="nodeArg" />
          </attributes>
          <functions>
            <function returns="void" name="addMatch">
              <params>
                <param optional="False" type="Match" name="add" />
              </params>
            </function>
            <function returns="Match" name="getMatch">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="Item" extends="">
          <attributes>
            <attribute readonly="True" type="boolean" name="exists" />
            <attribute readonly="True" type="DOMString" name="name" />
          </attributes>
        </interface>
        <interface name="StringItem" extends="Item">
          <attributes>
            <attribute readonly="True" type="DOMString" name="value" />
          </attributes>
        </interface>
        <interface name="IntegerItem" extends="Item">
          <attributes>
            <attribute readonly="True" type="long" name="value" />
          </attributes>
        </interface>
        <interface name="BooleanItem" extends="Item">
          <attributes>
            <attribute readonly="False" type="boolean" name="value" />
          </attributes>
        </interface>
        <interface name="ContentItem" extends="Item">
          <attributes>
            <attribute readonly="False" type="Node" name="nodeArg" />
            <attribute readonly="False" type="unsigned long" name="offset" />
          </attributes>
        </interface>
        <interface name="VisualView" extends="">
          <attributes>
            <attribute readonly="True" type="DOMString" name="fontScheme" />
            <attribute readonly="True" type="unsigned long" name="width" />
            <attribute readonly="True" type="unsigned long" name="height" />
            <attribute readonly="True" type="unsigned long" name="horizontalDPI" />
            <attribute readonly="True" type="unsigned long" name="verticalDPI" />
          </attributes>
          <functions>
            <function returns="VisualCharacter" name="createVisualCharacter" />
            <function returns="VisualCharacterRun" name="createVisualCharacterRun" />
            <function returns="VisualFrame" name="createVisualFrame" />
            <function returns="VisualImage" name="createVisualImage" />
            <function returns="VisualFormButton" name="createVisualFormButton" />
            <function returns="VisualFormField" name="createVisualFormField" />
            <function returns="void" name="select">
              <params>
                <param optional="False" type="Node" name="boundary" />
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="boolean" name="extend" />
                <param optional="False" type="boolean" name="add" />
              </params>
            </function>
            <function returns="void" name="matchSegment">
              <params>
                <param optional="False" type="VisualResource" name="segment" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="VisualResource" extends="" />
        <interface name="VisualFont" extends="VisualResource">
          <attributes>
            <attribute readonly="False" type="DOMString" name="matchFontName" />
            <attribute readonly="True" type="boolean" name="exists" />
            <attribute readonly="True" type="DOMString" name="fontName" />
          </attributes>
          <functions>
            <function returns="boolean" name="getNext" />
          </functions>
        </interface>
        <interface name="VisualSegment" extends="VisualResource">
          <attributes>
            <attribute readonly="False" type="boolean" name="matchPosition" />
            <attribute readonly="False" type="boolean" name="matchInside" />
            <attribute readonly="False" type="boolean" name="matchContaining" />
            <attribute readonly="False" type="long" name="matchX" />
            <attribute readonly="False" type="long" name="matchY" />
            <attribute readonly="False" type="long" name="matchXR" />
            <attribute readonly="False" type="long" name="matchYR" />
            <attribute readonly="False" type="boolean" name="matchContent" />
            <attribute readonly="False" type="boolean" name="matchRange" />
            <attribute readonly="False" type="Node" name="matchNode" />
            <attribute readonly="False" type="unsigned long" name="matchOffset" />
            <attribute readonly="False" type="Node" name="matchNodeR" />
            <attribute readonly="False" type="unsigned long" name="matchOffsetR" />
            <attribute readonly="False" type="boolean" name="matchContainsSelected" />
            <attribute readonly="False" type="boolean" name="matchContainsVisible" />
            <attribute readonly="True" type="boolean" name="exists" />
            <attribute readonly="True" type="Node" name="startNode" />
            <attribute readonly="True" type="unsigned long" name="startOffset" />
            <attribute readonly="True" type="Node" name="endNode" />
            <attribute readonly="True" type="unsigned long" name="endOffset" />
            <attribute readonly="True" type="long" name="topOffset" />
            <attribute readonly="True" type="long" name="bottomOffset" />
            <attribute readonly="True" type="long" name="leftOffset" />
            <attribute readonly="True" type="long" name="rightOffset" />
            <attribute readonly="True" type="unsigned long" name="width" />
            <attribute readonly="True" type="unsigned long" name="height" />
            <attribute readonly="True" type="boolean" name="selected" />
            <attribute readonly="True" type="boolean" name="visible" />
            <attribute readonly="True" type="unsigned long" name="foregroundColor" />
            <attribute readonly="True" type="unsigned long" name="backgroundColor" />
            <attribute readonly="True" type="DOMString" name="fontName" />
            <attribute readonly="True" type="DOMString" name="fontHeight" />
          </attributes>
          <functions>
            <function returns="boolean" name="getNext" />
          </functions>
        </interface>
        <interface name="VisualCharacter" extends="VisualSegment" />
        <interface name="VisualCharacterRun" extends="VisualSegment" />
        <interface name="VisualFrame" extends="VisualSegment">
          <attributes>
            <attribute readonly="True" type="VisualSegment" name="embedded" />
          </attributes>
        </interface>
        <interface name="VisualImage" extends="VisualSegment">
          <attributes>
            <attribute readonly="True" type="DOMString" name="imageURL" />
            <attribute readonly="True" type="boolean" name="isLoaded" />
          </attributes>
        </interface>
        <interface name="VisualFormButton" extends="VisualSegment">
          <attributes>
            <attribute readonly="True" type="boolean" name="isPressed" />
          </attributes>
        </interface>
        <interface name="VisualFormField" extends="VisualSegment">
          <attributes>
            <attribute readonly="True" type="DOMString" name="formValue" />
          </attributes>
        </interface>
        <interface name="Segment" extends="Match">
          <attributes>
            <attribute readonly="False" type="Match" name="criteria" />
            <attribute readonly="False" type="DOMString" name="order" />
          </attributes>
          <functions>
            <function returns="void" name="addItem">
              <params>
                <param optional="False" type="Item" name="add" />
              </params>
            </function>
            <function returns="MatchString" name="createMatchString">
              <params>
                <param optional="False" type="unsigned short" name="test" />
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="DOMString" name="value" />
              </params>
            </function>
            <function returns="MatchInteger" name="createMatchInteger">
              <params>
                <param optional="False" type="unsigned short" name="test" />
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="long" name="value" />
              </params>
            </function>
            <function returns="MatchBoolean" name="createMatchBoolean">
              <params>
                <param optional="False" type="unsigned short" name="test" />
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="boolean" name="value" />
              </params>
            </function>
            <function returns="MatchContent" name="createMatchContent">
              <params>
                <param optional="False" type="unsigned short" name="test" />
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="unsigned long" name="offset" />
                <param optional="False" type="Node" name="nodeArg" />
              </params>
            </function>
            <function returns="MatchSet" name="createMatchSet">
              <params>
                <param optional="False" type="unsigned short" name="test" />
              </params>
            </function>
            <function returns="StringItem" name="createStringItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="IntegerItem" name="createIntegerItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="BooleanItem" name="createBooleanItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="ContentItem" name="createContentItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="void" name="getItem">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="boolean" name="getNext" />
          </functions>
        </interface>
        <interface name="EventException" extends="">
          <functions>
            <function returns="unsigned short" name="code" />
          </functions>
          <consts>
            <const type="unsigned short" name="UNSPECIFIED_EVENT_TYPE_ERR" value="0" />
            <const type="unsigned short" name="DISPATCH_REQUEST_ERR" value="1" />
          </consts>
        </interface>
        <interface name="Event" extends="">
          <consts>
            <const type="unsigned short" name="CAPTURING_PHASE" value="1" />
            <const type="unsigned short" name="AT_TARGET" value="2" />
            <const type="unsigned short" name="BUBBLING_PHASE" value="3" />
          </consts>
          <attributes>
            <attribute readonly="True" type="DOMString" name="type" />
            <attribute readonly="True" type="EventTarget" name="target" />
            <attribute readonly="True" type="EventTarget" name="currentTarget" />
            <attribute readonly="True" type="unsigned short" name="eventPhase" />
            <attribute readonly="True" type="boolean" name="bubbles" />
            <attribute readonly="True" type="boolean" name="cancelable" />
            <attribute readonly="True" type="DOMTimeStamp" name="timeStamp" />
            <attribute readonly="True" type="DOMString" name="namespaceURI" />
          </attributes>
          <functions>
            <function returns="void" name="stopPropagation" />
            <function returns="void" name="preventDefault" />
            <function returns="void" name="initEvent">
              <params>
                <param optional="False" type="DOMString" name="eventTypeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
              </params>
            </function>
            <function returns="boolean" name="isCustom" />
            <function returns="void" name="stopImmediatePropagation" />
            <function returns="boolean" name="isDefaultPrevented" />
            <function returns="void" name="initEventNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURIArg" />
                <param optional="False" type="DOMString" name="eventTypeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="EventTarget" extends="">
          <functions>
            <function returns="void" name="addEventListener">
              <params>
                <param optional="False" type="DOMString" name="type" />
                <param optional="False" type="EventListener" name="listener" />
                <param optional="False" type="boolean" name="useCapture" />
              </params>
            </function>
            <function returns="void" name="removeEventListener">
              <params>
                <param optional="False" type="DOMString" name="type" />
                <param optional="False" type="EventListener" name="listener" />
                <param optional="False" type="boolean" name="useCapture" />
              </params>
            </function>
            <function returns="boolean" name="dispatchEvent">
              <params>
                <param optional="False" type="Event" name="evt" />
              </params>
              <raises>
                <exception name="EventException" />
              </raises>
            </function>
            <function returns="void" name="addEventListenerNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="type" />
                <param optional="False" type="EventListener" name="listener" />
                <param optional="False" type="boolean" name="useCapture" />
                <param optional="False" type="DOMObject" name="evtGroup" />
              </params>
            </function>
            <function returns="void" name="removeEventListenerNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="type" />
                <param optional="False" type="EventListener" name="listener" />
                <param optional="False" type="boolean" name="useCapture" />
              </params>
            </function>
            <function returns="boolean" name="willTriggerNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="type" />
              </params>
            </function>
            <function returns="boolean" name="hasEventListenerNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="type" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="EventListener" extends="">
          <functions>
            <function returns="void" name="handleEvent">
              <params>
                <param optional="False" type="Event" name="evt" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="DocumentEvent" extends="">
          <functions>
            <function returns="Event" name="createEvent">
              <params>
                <param optional="False" type="DOMString" name="eventType" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="boolean" name="canDispatch">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="type" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="CustomEvent" extends="Event">
          <functions>
            <function returns="void" name="setDispatchState">
              <params>
                <param optional="False" type="EventTarget" name="target" />
                <param optional="False" type="unsigned short" name="phase" />
              </params>
            </function>
            <function returns="boolean" name="isPropagationStopped" />
            <function returns="boolean" name="isImmediatePropagationStopped" />
          </functions>
        </interface>
        <interface name="UIEvent" extends="Event">
          <attributes>
            <attribute readonly="True" type="AbstractView" name="view" />
            <attribute readonly="True" type="long" name="detail" />
          </attributes>
          <functions>
            <function returns="void" name="initUIEvent">
              <params>
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="AbstractView" name="viewArg" />
                <param optional="False" type="long" name="detailArg" />
              </params>
            </function>
            <function returns="void" name="initUIEventNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="AbstractView" name="viewArg" />
                <param optional="False" type="long" name="detailArg" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="TextEvent" extends="UIEvent">
          <attributes>
            <attribute readonly="True" type="DOMString" name="data" />
          </attributes>
          <functions>
            <function returns="void" name="initTextEvent">
              <params>
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="AbstractView" name="viewArg" />
                <param optional="False" type="DOMString" name="dataArg" />
              </params>
            </function>
            <function returns="void" name="initTextEventNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="type" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="AbstractView" name="viewArg" />
                <param optional="False" type="DOMString" name="dataArg" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="MouseEvent" extends="UIEvent">
          <attributes>
            <attribute readonly="True" type="long" name="screenX" />
            <attribute readonly="True" type="long" name="screenY" />
            <attribute readonly="True" type="long" name="clientX" />
            <attribute readonly="True" type="long" name="clientY" />
            <attribute readonly="True" type="boolean" name="ctrlKey" />
            <attribute readonly="True" type="boolean" name="shiftKey" />
            <attribute readonly="True" type="boolean" name="altKey" />
            <attribute readonly="True" type="boolean" name="metaKey" />
            <attribute readonly="True" type="unsigned short" name="button" />
            <attribute readonly="True" type="EventTarget" name="relatedTarget" />
          </attributes>
          <functions>
            <function returns="void" name="initMouseEvent">
              <params>
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="AbstractView" name="viewArg" />
                <param optional="False" type="long" name="detailArg" />
                <param optional="False" type="long" name="screenXArg" />
                <param optional="False" type="long" name="screenYArg" />
                <param optional="False" type="long" name="clientXArg" />
                <param optional="False" type="long" name="clientYArg" />
                <param optional="False" type="boolean" name="ctrlKeyArg" />
                <param optional="False" type="boolean" name="altKeyArg" />
                <param optional="False" type="boolean" name="shiftKeyArg" />
                <param optional="False" type="boolean" name="metaKeyArg" />
                <param optional="False" type="unsigned short" name="buttonArg" />
                <param optional="False" type="EventTarget" name="relatedTargetArg" />
              </params>
            </function>
            <function returns="boolean" name="getModifierState">
              <params>
                <param optional="False" type="DOMString" name="keyIdentifierArg" />
              </params>
            </function>
            <function returns="void" name="initMouseEventNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="AbstractView" name="viewArg" />
                <param optional="False" type="long" name="detailArg" />
                <param optional="False" type="long" name="screenXArg" />
                <param optional="False" type="long" name="screenYArg" />
                <param optional="False" type="long" name="clientXArg" />
                <param optional="False" type="long" name="clientYArg" />
                <param optional="False" type="unsigned short" name="buttonArg" />
                <param optional="False" type="EventTarget" name="relatedTargetArg" />
                <param optional="False" type="DOMString" name="modifiersList" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="KeyboardEvent" extends="UIEvent">
          <consts>
            <const type="unsigned long" name="DOM_KEY_LOCATION_STANDARD" value="0x00" />
            <const type="unsigned long" name="DOM_KEY_LOCATION_LEFT" value="0x01" />
            <const type="unsigned long" name="DOM_KEY_LOCATION_RIGHT" value="0x02" />
            <const type="unsigned long" name="DOM_KEY_LOCATION_NUMPAD" value="0x03" />
          </consts>
          <attributes>
            <attribute readonly="True" type="DOMString" name="keyIdentifier" />
            <attribute readonly="True" type="unsigned long" name="keyLocation" />
            <attribute readonly="True" type="boolean" name="ctrlKey" />
            <attribute readonly="True" type="boolean" name="shiftKey" />
            <attribute readonly="True" type="boolean" name="altKey" />
            <attribute readonly="True" type="boolean" name="metaKey" />
          </attributes>
          <functions>
            <function returns="boolean" name="getModifierState">
              <params>
                <param optional="False" type="DOMString" name="keyIdentifierArg" />
              </params>
            </function>
            <function returns="void" name="initKeyboardEvent">
              <params>
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="AbstractView" name="viewArg" />
                <param optional="False" type="DOMString" name="keyIdentifierArg" />
                <param optional="False" type="unsigned long" name="keyLocationArg" />
                <param optional="False" type="DOMString" name="modifiersList" />
              </params>
            </function>
            <function returns="void" name="initKeyboardEventNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="AbstractView" name="viewArg" />
                <param optional="False" type="DOMString" name="keyIdentifierArg" />
                <param optional="False" type="unsigned long" name="keyLocationArg" />
                <param optional="False" type="DOMString" name="modifiersList" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="MutationEvent" extends="Event">
          <consts>
            <const type="unsigned short" name="MODIFICATION" value="1" />
            <const type="unsigned short" name="ADDITION" value="2" />
            <const type="unsigned short" name="REMOVAL" value="3" />
          </consts>
          <attributes>
            <attribute readonly="True" type="Node" name="relatedNode" />
            <attribute readonly="True" type="DOMString" name="prevValue" />
            <attribute readonly="True" type="DOMString" name="newValue" />
            <attribute readonly="True" type="DOMString" name="attrName" />
            <attribute readonly="True" type="unsigned short" name="attrChange" />
          </attributes>
          <functions>
            <function returns="void" name="initMutationEvent">
              <params>
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="Node" name="relatedNodeArg" />
                <param optional="False" type="DOMString" name="prevValueArg" />
                <param optional="False" type="DOMString" name="newValueArg" />
                <param optional="False" type="DOMString" name="attrNameArg" />
                <param optional="False" type="unsigned short" name="attrChangeArg" />
              </params>
            </function>
            <function returns="void" name="initMutationEventNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="Node" name="relatedNodeArg" />
                <param optional="False" type="DOMString" name="prevValueArg" />
                <param optional="False" type="DOMString" name="newValueArg" />
                <param optional="False" type="DOMString" name="attrNameArg" />
                <param optional="False" type="unsigned short" name="attrChangeArg" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="MutationNameEvent" extends="MutationEvent">
          <attributes>
            <attribute readonly="True" type="DOMString" name="prevNamespaceURI" />
            <attribute readonly="True" type="DOMString" name="prevNodeName" />
          </attributes>
          <functions>
            <function returns="void" name="initMutationNameEvent">
              <params>
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="Node" name="relatedNodeArg" />
                <param optional="False" type="DOMString" name="prevNamespaceURIArg" />
                <param optional="False" type="DOMString" name="prevNodeNameArg" />
              </params>
            </function>
            <function returns="void" name="initMutationNameEventNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="typeArg" />
                <param optional="False" type="boolean" name="canBubbleArg" />
                <param optional="False" type="boolean" name="cancelableArg" />
                <param optional="False" type="Node" name="relatedNodeArg" />
                <param optional="False" type="DOMString" name="prevNamespaceURIArg" />
                <param optional="False" type="DOMString" name="prevNodeNameArg" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="ASException" extends="">
          <functions>
            <function returns="unsigned short" name="code" />
          </functions>
          <consts>
            <const type="unsigned short" name="DUPLICATE_NAME_ERR" value="1" />
            <const type="unsigned short" name="TYPE_ERR" value="2" />
            <const type="unsigned short" name="NO_AS_AVAILABLE" value="3" />
            <const type="unsigned short" name="WRONG_MIME_TYPE_ERR" value="4" />
            <const type="unsigned short" name="INVALID_CHARACTER_ERR" value="5" />
            <const type="unsigned short" name="VALIDATION_ERR" value="6" />
            <const type="unsigned short" name="ACTIVEAS_DELETION_ERR" value="7" />
          </consts>
        </interface>
        <interface name="ASConstants" extends="">
          <consts>
            <const type="unsigned short" name="ELEMENT_DECLARATION" value="1" />
            <const type="unsigned short" name="ATTRIBUTE_DECLARATION" value="2" />
            <const type="unsigned short" name="NOTATION_DECLARATION" value="3" />
            <const type="unsigned short" name="ENTITY_DECLARATION" value="4" />
            <const type="unsigned short" name="CONTENT_MODEL" value="5" />
            <const type="unsigned short" name="SCHEMA_MODEL" value="6" />
            <const type="unsigned short" name="INTERNAL_SUBSET" value="30" />
            <const type="unsigned short" name="EXTERNAL_SUBSET" value="31" />
            <const type="unsigned short" name="NOT_USED" value="32" />
            <const type="unsigned short" name="INTERNAL_ENTITY" value="33" />
            <const type="unsigned short" name="EXTERNAL_ENTITY" value="34" />
            <const type="unsigned short" name="EMPTY_CONTENTTYPE" value="40" />
            <const type="unsigned short" name="SIMPLE_CONTENTTYPE" value="41" />
            <const type="unsigned short" name="ELEMENT_CONTENTTYPE" value="42" />
            <const type="unsigned short" name="MIXED_CONTENTTYPE" value="43" />
            <const type="unsigned short" name="ANY_CONTENTTYPE" value="44" />
            <const type="unsigned short" name="SEQUENCE_CM" value="50" />
            <const type="unsigned short" name="CHOICE_CM" value="51" />
            <const type="unsigned short" name="ALL_CM" value="52" />
            <const type="unsigned short" name="UNDEFINED_CM" value="53" />
            <const type="unsigned short" name="ATOMIC_CM" value="54" />
            <const type="unsigned short" name="NONE_VC" value="0" />
            <const type="unsigned short" name="DEFAULT_VC" value="60" />
            <const type="unsigned short" name="FIXED_VC" value="61" />
            <const type="unsigned short" name="REQUIRED_VC" value="62" />
            <const type="unsigned long" name="UNBOUNDED" value="MAX_VALUE" />
          </consts>
        </interface>
        <interface name="ASObject" extends="">
          <attributes>
            <attribute readonly="True" type="unsigned short" name="objectType" />
            <attribute readonly="True" type="ASModel" name="ownerModel" />
            <attribute readonly="True" type="DOMString" name="rawname" />
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="DOMString" name="namespace" />
          </attributes>
          <functions>
            <function returns="ASObject" name="cloneASObject">
              <params>
                <param optional="False" type="boolean" name="deep" />
              </params>
              <raises>
                <exception name="ASException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="ASDataType" extends="">
          <attributes>
            <attribute readonly="True" type="unsigned short" name="dataType" />
          </attributes>
          <consts>
            <const type="unsigned short" name="STRING_DATATYPE" value="1" />
            <const type="unsigned short" name="NOTATION_DATATYPE" value="10" />
            <const type="unsigned short" name="ID_DATATYPE" value="11" />
            <const type="unsigned short" name="IDREF_DATATYPE" value="12" />
            <const type="unsigned short" name="IDREFS_DATATYPE" value="13" />
            <const type="unsigned short" name="ENTITY_DATATYPE" value="14" />
            <const type="unsigned short" name="ENTITIES_DATATYPE" value="15" />
            <const type="unsigned short" name="NMTOKEN_DATATYPE" value="16" />
            <const type="unsigned short" name="NMTOKENS_DATATYPE" value="17" />
            <const type="unsigned short" name="BOOLEAN_DATATYPE" value="100" />
            <const type="unsigned short" name="FLOAT_DATATYPE" value="101" />
            <const type="unsigned short" name="DOUBLE_DATATYPE" value="102" />
            <const type="unsigned short" name="DECIMAL_DATATYPE" value="103" />
            <const type="unsigned short" name="HEXBINARY_DATATYPE" value="104" />
            <const type="unsigned short" name="BASE64BINARY_DATATYPE" value="105" />
            <const type="unsigned short" name="ANYURI_DATATYPE" value="106" />
            <const type="unsigned short" name="QNAME_DATATYPE" value="107" />
            <const type="unsigned short" name="DURATION_DATATYPE" value="108" />
            <const type="unsigned short" name="DATETIME_DATATYPE" value="109" />
            <const type="unsigned short" name="DATE_DATATYPE" value="110" />
            <const type="unsigned short" name="TIME_DATATYPE" value="111" />
            <const type="unsigned short" name="GYEARMONTH_DATATYPE" value="112" />
            <const type="unsigned short" name="GYEAR_DATATYPE" value="113" />
            <const type="unsigned short" name="GMONTHDAY_DATATYPE" value="114" />
            <const type="unsigned short" name="GDAY_DATATYPE" value="115" />
            <const type="unsigned short" name="GMONTH_DATATYPE" value="116" />
            <const type="unsigned short" name="INTEGER" value="117" />
            <const type="unsigned short" name="NAME_DATATYPE" value="200" />
            <const type="unsigned short" name="NCNAME_DATATYPE" value="201" />
            <const type="unsigned short" name="NORMALIZEDSTRING_DATATYPE" value="202" />
            <const type="unsigned short" name="TOKEN_DATATYPE" value="203" />
            <const type="unsigned short" name="LANGUAGE_DATATYPE" value="204" />
            <const type="unsigned short" name="NONPOSITIVEINTEGER_DATATYPE" value="205" />
            <const type="unsigned short" name="NEGATIVEINTEGER_DATATYPE" value="206" />
            <const type="unsigned short" name="LONG_DATATYPE" value="207" />
            <const type="unsigned short" name="INT_DATATYPE" value="208" />
            <const type="unsigned short" name="SHORT_DATATYPE" value="209" />
            <const type="unsigned short" name="BYTE_DATATYPE" value="210" />
            <const type="unsigned short" name="NONNEGATIVEINTEGER_DATATYPE" value="211" />
            <const type="unsigned short" name="UNSIGNEDLONG_DATATYPE" value="212" />
            <const type="unsigned short" name="UNSIGNEDINT_DATATYPE" value="213" />
            <const type="unsigned short" name="UNSIGNEDSHORT_DATATYPE" value="214" />
            <const type="unsigned short" name="UNSIGNEDBYTE_DATATYPE" value="215" />
            <const type="unsigned short" name="POSITIVEINTEGER_DATATYPE" value="216" />
            <const type="unsigned short" name="ANYSIMPLETYPE_DATATYPE" value="216" />
            <const type="unsigned short" name="ANYTYPE_DATATYPE" value="216" />
          </consts>
        </interface>
        <interface name="ASObjectList" extends="">
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="ASObject" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="ASNamedObjectMap" extends="">
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="ASObject" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="ASObject" name="getNamedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="ASObject" name="getNamedItemNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="ASModel" extends="ASObject">
          <attributes>
            <attribute readonly="True" type="boolean" name="namespaceAware" />
            <attribute readonly="True" type="unsigned short" name="usage" />
            <attribute readonly="True" type="DOMString" name="location" />
            <attribute readonly="True" type="DOMString" name="hint" />
            <attribute readonly="True" type="boolean" name="container" />
          </attributes>
          <functions>
            <function returns="ASNamedObjectMap" name="getComponents">
              <params>
                <param optional="False" type="unsigned short" name="objectType" />
              </params>
            </function>
            <function returns="ASElementDecl" name="getElementDecl">
              <params>
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="DOMString" name="targetNamespace" />
              </params>
            </function>
            <function returns="ASAttributeDecl" name="getAttributeDecl">
              <params>
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="DOMString" name="targetNamespace" />
              </params>
            </function>
            <function returns="ASEntityDecl" name="getEntityDecl">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="ASNotationDecl" name="getNotationDecl">
              <params>
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="DOMString" name="targetNamespace" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="ASContentModel" extends="ASObject">
          <attributes>
            <attribute readonly="True" type="unsigned short" name="contentModelType" />
            <attribute readonly="True" type="unsigned long" name="minOccurs" />
            <attribute readonly="True" type="unsigned long" name="maxOccurs" />
            <attribute readonly="True" type="ASObjectList" name="subModels" />
          </attributes>
        </interface>
        <interface name="ASElementDecl" extends="ASObject">
          <attributes>
            <attribute readonly="True" type="ASDataType" name="type" />
            <attribute readonly="True" type="unsigned short" name="contentType" />
            <attribute readonly="True" type="boolean" name="strictMixedContent" />
            <attribute readonly="True" type="ASContentModel" name="contentModel" />
            <attribute readonly="True" type="boolean" name="isPCDataOnly" />
            <attribute readonly="True" type="ASNamedObjectMap" name="attributeDecls" />
          </attributes>
          <functions>
            <function returns="ASAttributeDecl" name="getAttributeDecl">
              <params>
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="DOMString" name="targetNamespace" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="ASAttributeDecl" extends="ASObject">
          <attributes>
            <attribute readonly="True" type="ASDataType" name="type" />
            <attribute readonly="True" type="DOMString" name="enumAttr" />
            <attribute readonly="True" type="ASObjectList" name="ownerElementDeclarations" />
            <attribute readonly="True" type="unsigned short" name="defaultType" />
            <attribute readonly="True" type="DOMString" name="value" />
          </attributes>
        </interface>
        <interface name="ASEntityDecl" extends="ASObject">
          <attributes>
            <attribute readonly="True" type="unsigned short" name="entityType" />
            <attribute readonly="True" type="DOMString" name="entityValue" />
            <attribute readonly="True" type="DOMString" name="systemId" />
            <attribute readonly="True" type="DOMString" name="publicId" />
          </attributes>
        </interface>
        <interface name="ASNotationDecl" extends="ASObject">
          <attributes>
            <attribute readonly="True" type="DOMString" name="systemId" />
            <attribute readonly="True" type="DOMString" name="publicId" />
          </attributes>
        </interface>
        <interface name="ASWModel" extends="ASModel">
          <functions>
            <function returns="void" name="setLocation">
              <params>
                <param optional="False" type="DOMString" name="location" />
              </params>
            </function>
            <function returns="void" name="setHint">
              <params>
                <param optional="False" type="DOMString" name="hint" />
              </params>
            </function>
            <function returns="void" name="addComponent">
              <params>
                <param optional="False" type="ASObject" name="declaration" />
              </params>
            </function>
            <function returns="void" name="removeComponent">
              <params>
                <param optional="False" type="ASObject" name="declaration" />
              </params>
            </function>
            <function returns="void" name="addASModel">
              <params>
                <param optional="False" type="ASModel" name="declaration" />
              </params>
            </function>
            <function returns="void" name="removeASModel">
              <params>
                <param optional="False" type="ASModel" name="declaration" />
              </params>
            </function>
            <function returns="ASObjectList" name="getASModels" />
            <function returns="ASObject" name="importASObject">
              <params>
                <param optional="False" type="ASObject" name="asobject" />
              </params>
            </function>
            <function returns="void" name="insertASObject">
              <params>
                <param optional="False" type="ASObject" name="asobject" />
              </params>
            </function>
            <function returns="boolean" name="validate" />
            <function returns="ASWElementDecl" name="createASWElementDecl">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="ASException" />
              </raises>
            </function>
            <function returns="ASWAttributeDecl" name="createASWAttributeDecl">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="ASException" />
              </raises>
            </function>
            <function returns="ASWNotationDecl" name="createASWNotationDecl">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="DOMString" name="systemId" />
                <param optional="False" type="DOMString" name="publicId" />
              </params>
              <raises>
                <exception name="ASException" />
              </raises>
            </function>
            <function returns="ASWEntityDecl" name="createASWEntityDecl">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="ASException" />
              </raises>
            </function>
            <function returns="ASWContentModel" name="createASWContentModel">
              <params>
                <param optional="False" type="DOMString" name="name" />
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="unsigned long" name="minOccurs" />
                <param optional="False" type="unsigned long" name="maxOccurs" />
                <param optional="False" type="unsigned short" name="operator" />
              </params>
              <raises>
                <exception name="ASException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="ASWNamedObjectMap" extends="ASNamedObjectMap">
          <functions>
            <function returns="ASObject" name="removeNamedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
              <raises>
                <exception name="ASException" />
              </raises>
            </function>
            <function returns="ASObject" name="setNamedItem">
              <params>
                <param optional="False" type="ASObject" name="newASObject" />
              </params>
              <raises>
                <exception name="ASException" />
                <exception name="ASException" />
              </raises>
            </function>
            <function returns="ASObject" name="setNamedItemNS">
              <params>
                <param optional="False" type="ASObject" name="arg" />
              </params>
              <raises>
                <exception name="ASException" />
              </raises>
            </function>
            <function returns="ASObject" name="removeNamedItemNS">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
                <param optional="False" type="DOMString" name="localName" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="ASWElementDecl" extends="ASElementDecl">
          <functions>
            <function returns="void" name="setRawname">
              <params>
                <param optional="False" type="DOMString" name="rawname" />
              </params>
            </function>
            <function returns="void" name="setName">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="void" name="setNamespace">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
              </params>
            </function>
            <function returns="void" name="setStrictMixedContent">
              <params>
                <param optional="False" type="boolean" name="mixedContent" />
              </params>
            </function>
            <function returns="void" name="setType">
              <params>
                <param optional="False" type="ASDataType" name="type" />
              </params>
            </function>
            <function returns="void" name="setContentType">
              <params>
                <param optional="False" type="unsigned short" name="contentType" />
              </params>
            </function>
            <function returns="void" name="setContentModel">
              <params>
                <param optional="False" type="ASWContentModel" name="contentModel" />
              </params>
            </function>
            <function returns="void" name="addAttributeDecl">
              <params>
                <param optional="False" type="ASWAttributeDecl" name="attributeDecl" />
              </params>
            </function>
            <function returns="ASWAttributeDecl" name="removeAttributeDecl">
              <params>
                <param optional="False" type="ASWAttributeDecl" name="attributeDecl" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="ASWContentModel" extends="ASContentModel">
          <functions>
            <function returns="void" name="setName">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="void" name="setNamespaceURI">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
              </params>
            </function>
            <function returns="void" name="setContentModelType">
              <params>
                <param optional="False" type="unsigned short" name="operator" />
              </params>
            </function>
            <function returns="void" name="setMinOccurs">
              <params>
                <param optional="False" type="unsigned long" name="minOccurs" />
              </params>
            </function>
            <function returns="void" name="setMaxOccurs">
              <params>
                <param optional="False" type="unsigned long" name="maxOccurs" />
              </params>
            </function>
            <function returns="void" name="removeSubModel">
              <params>
                <param optional="False" type="ASObject" name="oldObject" />
              </params>
            </function>
            <function returns="ASObject" name="insertBeforeSubModel">
              <params>
                <param optional="False" type="ASObject" name="newObject" />
                <param optional="False" type="ASObject" name="refObject" />
              </params>
              <raises>
                <exception name="ASException" />
              </raises>
            </function>
            <function returns="unsigned long" name="appendSubModel">
              <params>
                <param optional="False" type="ASObject" name="newObject" />
              </params>
              <raises>
                <exception name="ASException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="ASWAttributeDecl" extends="ASAttributeDecl">
          <functions>
            <function returns="void" name="setRawname">
              <params>
                <param optional="False" type="DOMString" name="rawname" />
              </params>
            </function>
            <function returns="void" name="setName">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="void" name="setNamespaceURI">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
              </params>
            </function>
            <function returns="void" name="setType">
              <params>
                <param optional="False" type="ASDataType" name="type" />
              </params>
            </function>
            <function returns="void" name="setValue">
              <params>
                <param optional="False" type="DOMString" name="value" />
              </params>
            </function>
            <function returns="void" name="setEnumAttr">
              <params>
                <param optional="False" type="DOMString" name="enumeration" />
              </params>
            </function>
            <function returns="void" name="setDefaultType">
              <params>
                <param optional="False" type="unsigned short" name="constraint" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="ASWEntityDecl" extends="ASEntityDecl">
          <functions>
            <function returns="void" name="setRawname">
              <params>
                <param optional="False" type="DOMString" name="rawname" />
              </params>
            </function>
            <function returns="void" name="setEntityType">
              <params>
                <param optional="False" type="unsigned short" name="type" />
              </params>
            </function>
            <function returns="void" name="setEntityValue">
              <params>
                <param optional="False" type="DOMString" name="value" />
              </params>
            </function>
            <function returns="void" name="setSystemId">
              <params>
                <param optional="False" type="DOMString" name="systemId" />
              </params>
            </function>
            <function returns="void" name="setPublicId">
              <params>
                <param optional="False" type="DOMString" name="publicId" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="ASWNotationDecl" extends="ASNotationDecl">
          <functions>
            <function returns="void" name="setRawname">
              <params>
                <param optional="False" type="DOMString" name="rawname" />
              </params>
            </function>
            <function returns="void" name="setName">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="void" name="setNamespaceURI">
              <params>
                <param optional="False" type="DOMString" name="namespaceURI" />
              </params>
            </function>
            <function returns="void" name="setSystemId">
              <params>
                <param optional="False" type="DOMString" name="systemId" />
              </params>
            </function>
            <function returns="void" name="setPublicId">
              <params>
                <param optional="False" type="DOMString" name="publicId" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="DocumentAS" extends="Document">
          <attributes>
            <attribute readonly="False" type="ASModel" name="activeASModel" />
            <attribute readonly="False" type="ASObjectList" name="boundASModels" />
          </attributes>
          <functions>
            <function returns="ASModel" name="getInternalAS" />
            <function returns="void" name="setInternalAS">
              <params>
                <param optional="False" type="ASModel" name="as" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="addAS">
              <params>
                <param optional="False" type="ASModel" name="as" />
              </params>
            </function>
            <function returns="void" name="removeAS">
              <params>
                <param optional="False" type="ASModel" name="as" />
              </params>
              <raises>
                <exception name="ASException" />
              </raises>
            </function>
            <function returns="ASElementDecl" name="getElementDecl">
              <params>
                <param optional="False" type="Element" name="node" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="ASAttributeDecl" name="getAttributeDecl">
              <params>
                <param optional="False" type="Attr" name="node" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="ASEntityDecl" name="getEntityDecl">
              <params>
                <param optional="False" type="Entity" name="node" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="ASNotationDecl" name="getNotationDecl">
              <params>
                <param optional="False" type="Notation" name="node" />
              </params>
              <raises>
                <exception name="DOMException" />
              </raises>
            </function>
            <function returns="void" name="validate">
              <raises>
                <exception name="ASException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="DOMImplementationAS" extends="DOMImplementation">
          <functions>
            <function returns="ASWModel" name="createASWModel">
              <params>
                <param optional="False" type="boolean" name="isNamespaceAware" />
                <param optional="False" type="boolean" name="container" />
                <param optional="False" type="DOMString" name="schemaType" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="ASDOMBuilder" extends="DOMBuilder">
          <attributes>
            <attribute readonly="False" type="ASWModel" name="abstractSchema" />
          </attributes>
          <functions>
            <function returns="ASWModel" name="parseASURI">
              <params>
                <param optional="False" type="DOMString" name="uri" />
                <param optional="False" type="DOMString" name="schemaType" />
              </params>
              <raises>
                <exception name="ASException" />
                <exception name="DOMSystemException" />
              </raises>
            </function>
            <function returns="ASWModel" name="parseASInputSource">
              <params>
                <param optional="False" type="DOMInputSource" name="is" />
                <param optional="False" type="DOMString" name="schemaType" />
              </params>
              <raises>
                <exception name="ASException" />
                <exception name="DOMSystemException" />
              </raises>
            </function>
          </functions>
        </interface>
        <interface name="ASDOMWriter" extends="DOMWriter">
          <functions>
            <function returns="void" name="writeASModel">
              <params>
                <param optional="False" type="DOMOutputStream" name="destination" />
                <param optional="False" type="ASModel" name="model" />
              </params>
              <raises>
                <exception name="DOMSystemException" />
              </raises>
            </function>
          </functions>
        </interface>
      </interfaces>
    </module>
    <module name="Other" disabled="False">
      <interfaces>
        <interface name="History" extends="">
          <attributes>
            <attribute readonly="True" type="long" name="length" />
            <attribute readonly="True" type="DOMString" name="current" />
            <attribute readonly="True" type="DOMString" name="previous" />
            <attribute readonly="True" type="DOMString" name="next" />
          </attributes>
          <functions>
            <function returns="void" name="back" />
            <function returns="void" name="forward" />
            <function returns="void" name="go">
              <params>
                <param optional="True" type="long" name="aDelta" />
              </params>
            </function>
            <function returns="DOMString" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="Location" extends="">
          <attributes>
            <attribute readonly="False" type="DOMString" name="href" />
            <attribute readonly="False" type="DOMString" name="hash" />
            <attribute readonly="False" type="DOMString" name="host" />
            <attribute readonly="False" type="DOMString" name="hostname" />
            <attribute readonly="False" type="DOMString" name="pathname" />
            <attribute readonly="False" type="DOMString" name="port" />
            <attribute readonly="False" type="DOMString" name="protocol" />
            <attribute readonly="False" type="DOMString" name="search" />
          </attributes>
          <functions>
            <function returns="void" name="assign">
              <params>
                <param optional="False" type="DOMString" name="url" />
              </params>
            </function>
            <function returns="void" name="replace">
              <params>
                <param optional="False" type="DOMString" name="url" />
              </params>
            </function>
            <function returns="void" name="reload" />
            <function returns="DOMString" name="toString" />
          </functions>
        </interface>
        <interface name="MimeType" extends="">
          <attributes>
            <attribute readonly="True" type="DOMString" name="description" />
            <attribute readonly="True" type="Plugin" name="enabledPlugin" />
            <attribute readonly="True" type="DOMString" name="suffixes" />
            <attribute readonly="True" type="DOMString" name="type" />
          </attributes>
        </interface>
        <interface name="MimeTypeArray" extends="">
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="MimeType" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="MimeType" name="namedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="Navigator" extends="">
          <attributes>
            <attribute readonly="True" type="DOMString" name="appCodeName" />
            <attribute readonly="True" type="DOMString" name="appName" />
            <attribute readonly="True" type="DOMString" name="appVersion" />
            <attribute readonly="True" type="DOMString" name="language" />
            <attribute readonly="True" type="MimeTypeArray" name="mimeTypes" />
            <attribute readonly="True" type="DOMString" name="platform" />
            <attribute readonly="True" type="DOMString" name="oscpu" />
            <attribute readonly="True" type="DOMString" name="vendor" />
            <attribute readonly="True" type="DOMString" name="vendorSub" />
            <attribute readonly="True" type="DOMString" name="product" />
            <attribute readonly="True" type="DOMString" name="productSub" />
            <attribute readonly="True" type="PluginArray" name="plugins" />
            <attribute readonly="True" type="DOMString" name="securityPolicy" />
            <attribute readonly="True" type="DOMString" name="userAgent" />
            <attribute readonly="True" type="boolean" name="cookieEnabled" />
            <attribute readonly="True" type="boolean" name="onLine" />
            <attribute readonly="True" type="DOMString" name="buildID" />
          </attributes>
          <functions>
            <function returns="boolean" name="javaEnabled" />
            <function returns="boolean" name="taintEnabled" />
            <function returns="void" name="preference" />
          </functions>
        </interface>
        <interface name="Plugin" extends="">
          <attributes>
            <attribute readonly="True" type="DOMString" name="description" />
            <attribute readonly="True" type="DOMString" name="filename" />
            <attribute readonly="True" type="DOMString" name="name" />
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="MimeType" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="MimeType" name="namedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="PluginArray" extends="">
          <attributes>
            <attribute readonly="True" type="unsigned long" name="length" />
          </attributes>
          <functions>
            <function returns="Plugin" name="item">
              <params>
                <param optional="False" type="unsigned long" name="index" />
              </params>
            </function>
            <function returns="Plugin" name="namedItem">
              <params>
                <param optional="False" type="DOMString" name="name" />
              </params>
            </function>
            <function returns="void" name="refresh">
              <params>
                <param optional="False" type="boolean" name="reloadDocuments" />
              </params>
            </function>
          </functions>
        </interface>
        <interface name="Screen" extends="">
          <attributes>
            <attribute readonly="True" type="long" name="top" />
            <attribute readonly="True" type="long" name="left" />
            <attribute readonly="True" type="long" name="width" />
            <attribute readonly="True" type="long" name="height" />
            <attribute readonly="True" type="long" name="pixelDepth" />
            <attribute readonly="True" type="long" name="colorDepth" />
            <attribute readonly="True" type="long" name="availWidth" />
            <attribute readonly="True" type="long" name="availHeight" />
            <attribute readonly="True" type="long" name="availLeft" />
            <attribute readonly="True" type="long" name="availTop" />
          </attributes>
        </interface>
        <interface name="XMLHttpRequest" extends="">
          <attributes>
            <attribute readonly="False" type="EventListener" name="onreadystatechange" />
            <attribute readonly="True" type="unsigned short" name="readyState" />
            <attribute readonly="True" type="DOMString" name="responseText" />
            <attribute readonly="True" type="Document" name="responseXML" />
            <attribute readonly="True" type="unsigned short" name="status" />
            <attribute readonly="True" type="DOMString" name="statusText" />
          </attributes>
          <consts>
            <const type="unsigned short" name="UNSENT" value="0" />
            <const type="unsigned short" name="OPENED" value="1" />
            <const type="unsigned short" name="HEADERS_RECEIVED" value="2" />
            <const type="unsigned short" name="LOADING" value="3" />
            <const type="unsigned short" name="DONE" value="4" />
          </consts>
          <functions>
            <function returns="void" name="open">
              <params>
                <param optional="False" type="DOMString" name="method" />
                <param optional="False" type="DOMString" name="url" />
              </params>
            </function>
            <function returns="void" name="open">
              <params>
                <param optional="False" type="DOMString" name="method" />
                <param optional="False" type="DOMString" name="url" />
                <param optional="False" type="boolean" name="async" />
              </params>
            </function>
            <function returns="void" name="open">
              <params>
                <param optional="False" type="DOMString" name="method" />
                <param optional="False" type="DOMString" name="url" />
                <param optional="False" type="boolean" name="async" />
                <param optional="False" type="DOMString" name="user" />
              </params>
            </function>
            <function returns="void" name="open">
              <params>
                <param optional="False" type="DOMString" name="method" />
                <param optional="False" type="DOMString" name="url" />
                <param optional="False" type="boolean" name="async" />
                <param optional="False" type="DOMString" name="user" />
                <param optional="False" type="DOMString" name="password" />
              </params>
            </function>
            <function returns="void" name="setRequestHeader">
              <params>
                <param optional="False" type="DOMString" name="header" />
                <param optional="False" type="DOMString" name="value" />
              </params>
            </function>
            <function returns="void" name="send" />
            <function returns="void" name="send">
              <params>
                <param optional="False" type="DOMString" name="data" />
              </params>
            </function>
            <function returns="void" name="send">
              <params>
                <param optional="False" type="Document" name="data" />
              </params>
            </function>
            <function returns="void" name="abort" />
            <function returns="DOMString" name="getAllResponseHeaders" />
            <function returns="DOMString" name="getResponseHeader">
              <params>
                <param optional="False" type="DOMString" name="header" />
              </params>
            </function>
          </functions>
        </interface>
      </interfaces>
    </module>
  </modules>
  <window name="Window" extends="Object">
    <attributes>
      <attribute readonly="True" type="Location" name="location" />
      <attribute readonly="True" type="Element" name="frameElement" />
      <attribute readonly="True" type="Document" name="document" />
      <attribute readonly="True" type="Window" name="parent" />
      <attribute readonly="True" type="Window" name="top" />
      <attribute readonly="False" type="DOMString" name="name" />
      <attribute readonly="True" type="long" name="scrollX" />
      <attribute readonly="True" type="long" name="scrollY" />
      <attribute readonly="True" type="Window" name="window" />
      <attribute readonly="True" type="Window" name="self" />
      <attribute readonly="True" type="Navigator" name="navigator" />
      <attribute readonly="True" type="Screen" name="screen" />
      <attribute readonly="True" type="History" name="history" />
      <attribute readonly="True" type="Window" name="content" />
      <attribute readonly="True" type="boolean" name="closed" />
      <attribute readonly="True" type="Crypto" name="crypto" />
      <attribute readonly="True" type="Pkcs11" name="pkcs11" />
      <attribute readonly="False" type="Window" name="opener" />
      <attribute readonly="False" type="DOMString" name="status" />
      <attribute readonly="False" type="DOMString" name="defaultStatus" />
      <attribute readonly="True" type="Location" name="location" />
      <attribute readonly="False" type="long" name="innerWidth" />
      <attribute readonly="False" type="long" name="innerHeight" />
      <attribute readonly="False" type="long" name="outerWidth" />
      <attribute readonly="False" type="long" name="outerHeight" />
      <attribute readonly="False" type="long" name="screenX" />
      <attribute readonly="False" type="long" name="screenY" />
      <attribute readonly="True" type="long" name="pageXOffset" />
      <attribute readonly="True" type="long" name="pageYOffset" />
      <attribute readonly="True" type="long" name="scrollMaxX" />
      <attribute readonly="True" type="long" name="scrollMaxY" />
      <attribute readonly="True" type="unsigned long" name="length" />
      <attribute readonly="False" type="boolean" name="fullScreen" />
      <attribute readonly="True" type="Element" name="frameElement" />
      <attribute readonly="True" type="Number" name="Infinity" />
      <attribute readonly="True" type="Number" name="NaN" />
      <attribute readonly="True" type="Object" name="undefined" />
    </attributes>
    <functions>
      <function returns="long" name="setTimeout">
        <params>
          <param optional="False" type="TimerListener" name="listener" />
          <param optional="False" type="long" name="milliseconds" />
        </params>
      </function>
      <function returns="void" name="clearTimeout">
        <params>
          <param optional="False" type="long" name="timerID" />
        </params>
      </function>
      <function returns="long" name="setInterval">
        <params>
          <param optional="False" type="TimerListener" name="listener" />
          <param optional="False" type="long" name="milliseconds" />
        </params>
      </function>
      <function returns="void" name="clearInterval">
        <params>
          <param optional="False" type="long" name="timerID" />
        </params>
      </function>
      <function returns="void" name="scrollTo">
        <params>
          <param optional="False" type="long" name="xScroll" />
          <param optional="False" type="long" name="yScroll" />
        </params>
      </function>
      <function returns="void" name="scrollBy">
        <params>
          <param optional="False" type="long" name="xScrollDif" />
          <param optional="False" type="long" name="yScrollDif" />
        </params>
      </function>
      <function returns="Selection" name="getSelection" />
      <function returns="void" name="scrollByLines">
        <params>
          <param optional="False" type="long" name="numLines" />
        </params>
      </function>
      <function returns="void" name="scrollByPages">
        <params>
          <param optional="False" type="long" name="numPages" />
        </params>
      </function>
      <function returns="void" name="sizeToContent" />
      <function returns="void" name="alert">
        <params>
          <param optional="False" type="DOMString" name="text" />
        </params>
      </function>
      <function returns="boolean" name="confirm">
        <params>
          <param optional="False" type="DOMString" name="text" />
        </params>
      </function>
      <function returns="DOMString" name="prompt">
        <params>
          <param optional="False" type="DOMString" name="aMessage" />
          <param optional="False" type="DOMString" name="aInitial" />
          <param optional="False" type="DOMString" name="aTitle" />
          <param optional="False" type="unsigned long" name="aSavePassword" />
        </params>
      </function>
      <function returns="void" name="focus" />
      <function returns="void" name="blur" />
      <function returns="void" name="back" />
      <function returns="void" name="forward" />
      <function returns="void" name="home" />
      <function returns="void" name="stop" />
      <function returns="void" name="print" />
      <function returns="void" name="moveTo">
        <params>
          <param optional="False" type="long" name="xPos" />
          <param optional="False" type="long" name="yPos" />
        </params>
      </function>
      <function returns="void" name="moveBy">
        <params>
          <param optional="False" type="long" name="xDif" />
          <param optional="False" type="long" name="yDif" />
        </params>
      </function>
      <function returns="void" name="resizeTo">
        <params>
          <param optional="False" type="long" name="width" />
          <param optional="False" type="long" name="height" />
        </params>
      </function>
      <function returns="void" name="resizeBy">
        <params>
          <param optional="False" type="long" name="widthDif" />
          <param optional="False" type="long" name="heightDif" />
        </params>
      </function>
      <function returns="void" name="scroll">
        <params>
          <param optional="False" type="long" name="xScroll" />
          <param optional="False" type="long" name="yScroll" />
        </params>
      </function>
      <function returns="Window" name="open">
        <params>
          <param optional="False" type="DOMString" name="url" />
          <param optional="False" type="DOMString" name="name" />
          <param optional="False" type="DOMString" name="options" />
        </params>
      </function>
      <function returns="void" name="close" />
      <function returns="boolean" name="find">
        <params>
          <param optional="False" type="DOMString" name="str" />
          <param optional="False" type="boolean" name="caseSensitive" />
          <param optional="False" type="boolean" name="backwards" />
          <param optional="False" type="boolean" name="wrapAround" />
          <param optional="False" type="boolean" name="wholeWord" />
          <param optional="False" type="boolean" name="searchInFrames" />
          <param optional="False" type="boolean" name="showDialog" />
        </params>
      </function>
      <function returns="DOMString" name="atob">
        <params>
          <param optional="False" type="DOMString" name="aAsciiString" />
        </params>
      </function>
      <function returns="DOMString" name="btoa">
        <params>
          <param optional="False" type="DOMString" name="aBase64Data" />
        </params>
      </function>
      <function returns="String" name="decodeURI">
        <params>
          <param optional="False" type="String" name="encodedURI" />
        </params>
      </function>
      <function returns="String" name="decodeURIComponent">
        <params>
          <param optional="False" type="String" name="encodedURI" />
        </params>
      </function>
      <function returns="String" name="encodeURI">
        <params>
          <param optional="False" type="String" name="URI" />
        </params>
      </function>
      <function returns="String" name="encodeURIComponent">
        <params>
          <param optional="False" type="String" name="str" />
        </params>
      </function>
      <function returns="Object" name="eval">
        <params>
          <param optional="False" type="String" name="string" />
        </params>
      </function>
      <function returns="Boolean" name="isFinite">
        <params>
          <param optional="False" type="Number" name="number" />
        </params>
      </function>
      <function returns="Boolean" name="isNaN">
        <params>
          <param optional="False" type="Object" name="testValue" />
        </params>
      </function>
      <function returns="Number" name="parseFloat">
        <params>
          <param optional="False" type="String" name="string" />
        </params>
      </function>
      <function returns="Number" name="parseInt">
        <params>
          <param optional="False" type="Number" name="radix" />
        </params>
      </function>
    </functions>
  </window>
  <reservedWords>
    <current>
      <keyword name="break" />
      <keyword name="case" />
      <keyword name="catch" />
      <keyword name="continue" />
      <keyword name="default" />
      <keyword name="delete" />
      <keyword name="do" />
      <keyword name="else" />
      <keyword name="finally" />
      <keyword name="for" />
      <keyword name="function" />
      <keyword name="if" />
      <keyword name="in" />
      <keyword name="instanceof" />
      <keyword name="new" />
      <keyword name="return" />
      <keyword name="switch" />
      <keyword name="this" />
      <keyword name="throw" />
      <keyword name="try" />
      <keyword name="typeof" />
      <keyword name="var" />
      <keyword name="void" />
      <keyword name="while" />
      <keyword name="with" />
      <keyword name="null" />
      <keyword name="true" />
      <keyword name="false" />
      <keyword name="NaN" />
    </current>
    <future>
      <keyword name="abstract" />
      <keyword name="boolean" />
      <keyword name="byte" />
      <keyword name="char" />
      <keyword name="class" />
      <keyword name="const" />
      <keyword name="debugger" />
      <keyword name="double" />
      <keyword name="enum" />
      <keyword name="export" />
      <keyword name="extends" />
      <keyword name="final" />
      <keyword name="float" />
      <keyword name="goto" />
      <keyword name="implements" />
      <keyword name="import" />
      <keyword name="int" />
      <keyword name="interface" />
      <keyword name="long" />
      <keyword name="native" />
      <keyword name="package" />
      <keyword name="private" />
      <keyword name="protected" />
      <keyword name="public" />
      <keyword name="short" />
      <keyword name="static" />
      <keyword name="super" />
      <keyword name="synchronized" />
      <keyword name="throws" />
      <keyword name="transient" />
      <keyword name="volatile" />
    </future>
  </reservedWords>
</javascript>
